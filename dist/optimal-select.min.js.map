{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///optimal-select.min.js","webpack:///webpack/bootstrap 746ec233adcb240f1f96","webpack:///./src/utilities.js","webpack:///./src/common.js","webpack:///./src/optimize.js","webpack:///./src/adapt.js","webpack:///./src/select.js","webpack:///./~/css2xpath/index.js","webpack:///./src/match.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","convertNodeList","nodes","length","arr","Array","escapeValue","replace","getCommonAncestor","elements","options","arguments","undefined","_options$root","document","ancestors","forEach","element","index","parents","parentNode","unshift","sort","curr","next","shallowAncestor","shift","ancestor","_loop","parent","some","otherParents","otherParent","getCommonProperties","commonProperties","classes","attributes","tag","commonClasses","commonAttributes","commonTag","getAttribute","trim","split","filter","entry","elementAttributes","keys","reduce","key","attribute","attributeName","attributesNames","commonAttributesNames","nextCommonAttributes","tagName","toLowerCase","_interopRequireDefault","obj","default","optimize","selector","startsWith","isArray","_utilities","nodeType","Error","path","_adapt2","optimizePart","shortened","pop","current","prePart","join","postPart","pattern","matches","querySelectorAll","every","slice","test","compareResults","references","_loop2","reference","contains","description","pattern2","matches2","_ret2","descendant","pattern3","type","pattern4","names","map","partial","pattern5","charAt","match","_loop3","i2","pattern6","matches6","l2","_ret3","_adapt","adapt","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","push","err","getSingleSelector","_typeof","_match2","_optimize2","getMultiSelector","_common","ancestorSelector","commonSelectors","getCommonSelectors","descendantSelector","selectorMatches","console","warn","_getCommonProperties","selectorPath","classSelector","attributeSelector","parts","getQuerySelector","input","result","format","_css2xpath2","constructor","_css2xpath","_match","_optimize","prependAxis","axis","regex_first_axis","start","literal","substr","selectorStart","depth","offset","escape_parens","isNumeric","num","parseInt","isNaN","escapeChar","open","close","char","RegExp","a","repeat","str","Number","convertEscaping","css2xpath","nested","css_pseudo_classes_regex","css_pseudo_classes_callback","css_ids_classes_regex","css_ids_classes_callback","literals","regex_string_literal","escape_literal","css_combinators_regex","css_combinators_callback","css_attributes_regex","css_attributes_callback","search","regex_css_wrap_pseudo","indexOf","substring","regex_escaped_literal","regex_specal_chars","regex_filter_prefix","regex_attr_prefix","xpath_to_lower","xpath_ends_with","s1","s2","xpath_url","xpath_url_attrs","xpath_url_path","xpath_url_domain","xpath_lower_case","xpath_ns_uri","xpath_ns_path","xpath_has_protocal","xpath_is_internal","xpath_normalize_space","xpath_internal","xpath_external","String","fromCharCode","regex_nth_equation","operator","func","exclude","orig","prefix","prevChar","attr","comp","op","val","g1","g2","arg","g3","g4","g5","xpath","window","_toConsumableArray","arr2","from","node","_options$skip","skip","_options$priority","priority","_options$ignore","ignore","skipCompare","skipChecks","compare","predicate","toString","checkAttributes","checkTag","checkChilds","findPattern","findAttributesPattern","getClassSelector","r","concat","b","attributeNames","sortedKeys","attributeValue","useNamedIgnore","currentIgnore","currentDefaultIgnore","defaultIgnore","checkIgnore","classNames","classIgnore","class","className","findTagPattern","children","childTags","child","childPattern","defaultPredicate","check","_interopRequireWildcard","newObj","common","select","_select","_common2"],"mappings":"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","file":"optimal-select.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OptimalSelect\"] = factory();\n\telse\n\t\troot[\"OptimalSelect\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OptimalSelect\"] = factory();\n\telse\n\t\troot[\"OptimalSelect\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertNodeList = convertNodeList;\nexports.escapeValue = escapeValue;\n/**\n * # Utilities\n *\n * Convenience helpers.\n */\n\n/**\n * Create an array with the DOM nodes of the list\n *\n * @param  {NodeList}             nodes - [description]\n * @return {Array.<HTMLElement>}        - [description]\n */\nfunction convertNodeList(nodes) {\n  var length = nodes.length;\n\n  var arr = new Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = nodes[i];\n  }\n  return arr;\n}\n\n/**\n * Escape special characters and line breaks as a simplified version of 'CSS.escape()'\n *\n * Description of valid characters: https://mathiasbynens.be/notes/css-escapes\n *\n * @param  {String?} value - [description]\n * @return {String}        - [description]\n */\nfunction escapeValue(value) {\n  return value && value.replace(/['\"`\\\\/:?&!#$%^()[\\]{|}*+;,.<=>@~]/g, '\\\\$&').replace(/\\n/g, '\\xA0');\n}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCommonAncestor = getCommonAncestor;\nexports.getCommonProperties = getCommonProperties;\n/**\n * # Common\n *\n * Process collections for similarities.\n */\n\n/**\n * Find the last common ancestor of elements\n *\n * @param  {Array.<HTMLElements>} elements - [description]\n * @return {HTMLElement}                   - [description]\n */\nfunction getCommonAncestor(elements) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$root = options.root,\n      root = _options$root === undefined ? document : _options$root;\n\n\n  var ancestors = [];\n\n  elements.forEach(function (element, index) {\n    var parents = [];\n    while (element !== root) {\n      element = element.parentNode;\n      parents.unshift(element);\n    }\n    ancestors[index] = parents;\n  });\n\n  ancestors.sort(function (curr, next) {\n    return curr.length - next.length;\n  });\n\n  var shallowAncestor = ancestors.shift();\n\n  var ancestor = null;\n\n  var _loop = function _loop() {\n    var parent = shallowAncestor[i];\n    var missing = ancestors.some(function (otherParents) {\n      return !otherParents.some(function (otherParent) {\n        return otherParent === parent;\n      });\n    });\n\n    if (missing) {\n      // TODO: find similar sub-parents, not the top root, e.g. sharing a class selector\n      return 'break';\n    }\n\n    ancestor = parent;\n  };\n\n  for (var i = 0, l = shallowAncestor.length; i < l; i++) {\n    var _ret = _loop();\n\n    if (_ret === 'break') break;\n  }\n\n  return ancestor;\n}\n\n/**\n * Get a set of common properties of elements\n *\n * @param  {Array.<HTMLElement>} elements - [description]\n * @return {Object}                       - [description]\n */\nfunction getCommonProperties(elements) {\n\n  var commonProperties = {\n    classes: [],\n    attributes: {},\n    tag: null\n  };\n\n  elements.forEach(function (element) {\n    var commonClasses = commonProperties.classes,\n        commonAttributes = commonProperties.attributes,\n        commonTag = commonProperties.tag;\n\n    // ~ classes\n\n    if (commonClasses !== undefined) {\n      var classes = element.getAttribute('class');\n      if (classes) {\n        classes = classes.trim().split(' ');\n        if (!commonClasses.length) {\n          commonProperties.classes = classes;\n        } else {\n          commonClasses = commonClasses.filter(function (entry) {\n            return classes.some(function (name) {\n              return name === entry;\n            });\n          });\n          if (commonClasses.length) {\n            commonProperties.classes = commonClasses;\n          } else {\n            delete commonProperties.classes;\n          }\n        }\n      } else {\n        // TODO: restructure removal as 2x set / 2x delete, instead of modify always replacing with new collection\n        delete commonProperties.classes;\n      }\n    }\n\n    // ~ attributes\n    if (commonAttributes !== undefined) {\n      var elementAttributes = element.attributes;\n      var attributes = Object.keys(elementAttributes).reduce(function (attributes, key) {\n        var attribute = elementAttributes[key];\n        var attributeName = attribute.name;\n        // NOTE: workaround detection for non-standard phantomjs NamedNodeMap behaviour\n        // (issue: https://github.com/ariya/phantomjs/issues/14634)\n        if (attribute && attributeName !== 'class') {\n          attributes[attributeName] = attribute.value;\n        }\n        return attributes;\n      }, {});\n\n      var attributesNames = Object.keys(attributes);\n      var commonAttributesNames = Object.keys(commonAttributes);\n\n      if (attributesNames.length) {\n        if (!commonAttributesNames.length) {\n          commonProperties.attributes = attributes;\n        } else {\n          commonAttributes = commonAttributesNames.reduce(function (nextCommonAttributes, name) {\n            var value = commonAttributes[name];\n            if (value === attributes[name]) {\n              nextCommonAttributes[name] = value;\n            }\n            return nextCommonAttributes;\n          }, {});\n          if (Object.keys(commonAttributes).length) {\n            commonProperties.attributes = commonAttributes;\n          } else {\n            delete commonProperties.attributes;\n          }\n        }\n      } else {\n        delete commonProperties.attributes;\n      }\n    }\n\n    // ~ tag\n    if (commonTag !== undefined) {\n      var tag = element.tagName.toLowerCase();\n      if (!commonTag) {\n        commonProperties.tag = tag;\n      } else if (tag !== commonTag) {\n        delete commonProperties.tag;\n      }\n    }\n  });\n\n  return commonProperties;\n}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = optimize;\n\nvar _adapt = __webpack_require__(3);\n\nvar _adapt2 = _interopRequireDefault(_adapt);\n\nvar _utilities = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Apply different optimization techniques\n *\n * @param  {string}                          selector - [description]\n * @param  {HTMLElement|Array.<HTMLElement>} element  - [description]\n * @param  {Object}                          options  - [description]\n * @return {string}                                   - [description]\n */\n/**\n * # Optimize\n *\n * 1.) Improve efficiency through shorter selectors by removing redundancy\n * 2.) Improve robustness through selector transformation\n */\n\nfunction optimize(selector, elements) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\n  if (selector.startsWith('> ')) {\n    selector = selector.replace('> ', '');\n  }\n\n  // convert single entry and NodeList\n  if (!Array.isArray(elements)) {\n    elements = !elements.length ? [elements] : (0, _utilities.convertNodeList)(elements);\n  }\n\n  if (!elements.length || elements.some(function (element) {\n    return element.nodeType !== 1;\n  })) {\n    throw new Error('Invalid input - to compare HTMLElements its necessary to provide a reference of the selected node(s)! (missing \"elements\")');\n  }\n\n  var globalModified = (0, _adapt2.default)(elements[0], options);\n\n  // chunk parts outside of quotes (http://stackoverflow.com/a/25663729)\n  var path = selector.replace(/> /g, '>').split(/\\s+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n  if (path.length < 2) {\n    return optimizePart('', selector, '', elements);\n  }\n\n  var shortened = [path.pop()];\n\n  var _loop = function _loop() {\n    var current = path.pop();\n    var prePart = path.join(' ');\n    var postPart = shortened.join(' ');\n\n    var pattern = prePart + ' ' + postPart;\n    var matches = document.querySelectorAll(pattern);\n    var hasSameResult = matches.length === elements.length && elements.every(function (element, i) {\n      return element === matches[i];\n    });\n    if (!hasSameResult) {\n      shortened.unshift(optimizePart(prePart, current, postPart, elements));\n    }\n  };\n\n  while (path.length > 1) {\n    _loop();\n  }\n  shortened.unshift(path[0]);\n  path = shortened;\n\n  // optimize start + end\n  path[0] = optimizePart('', path[0], path.slice(1).join(' '), elements);\n  path[path.length - 1] = optimizePart(path.slice(0, -1).join(' '), path[path.length - 1], '', elements);\n\n  if (globalModified) {\n    delete true;\n  }\n\n  return path.join(' ').replace(/>/g, '> ').trim();\n}\n\n/**\n * Improve a chunk of the selector\n *\n * @param  {string}              prePart  - [description]\n * @param  {string}              current  - [description]\n * @param  {string}              postPart - [description]\n * @param  {Array.<HTMLElement>} elements - [description]\n * @return {string}                       - [description]\n */\nfunction optimizePart(prePart, current, postPart, elements) {\n  if (prePart.length) prePart = prePart + ' ';\n  if (postPart.length) postPart = ' ' + postPart;\n\n  // robustness: attribute without value (generalization)\n  if (/\\[*\\]/.test(current)) {\n    var key = current.replace(/=.*$/, ']');\n    var pattern = '' + prePart + key + postPart;\n    var matches = document.querySelectorAll(pattern);\n    if (compareResults(matches, elements)) {\n      current = key;\n    } else {\n      // robustness: replace specific key-value with base tag (heuristic)\n      var references = document.querySelectorAll('' + prePart + key);\n\n      var _loop2 = function _loop2() {\n        var reference = references[i];\n        if (elements.some(function (element) {\n          return reference.contains(element);\n        })) {\n          var description = reference.tagName.toLowerCase();\n          pattern2 = '' + prePart + description + postPart;\n          matches2 = document.querySelectorAll(pattern2);\n\n          if (compareResults(matches2, elements)) {\n            current = description;\n          }\n          return 'break';\n        }\n      };\n\n      for (var i = 0, l = references.length; i < l; i++) {\n        var pattern2;\n        var matches2;\n\n        var _ret2 = _loop2();\n\n        if (_ret2 === 'break') break;\n      }\n    }\n  }\n\n  // robustness: descendant instead child (heuristic)\n  if (/>/.test(current)) {\n    var descendant = current.replace(/>/, '');\n    var pattern3 = '' + prePart + descendant + postPart;\n    var matches3 = document.querySelectorAll(pattern3);\n    if (compareResults(matches3, elements)) {\n      current = descendant;\n    }\n  }\n\n  // robustness: 'nth-of-type' instead 'nth-child' (heuristic)\n  if (/:nth-child/.test(current)) {\n    // TODO: consider complete coverage of 'nth-of-type' replacement\n    var type = current.replace(/nth-child/g, 'nth-of-type');\n    var pattern4 = '' + prePart + type + postPart;\n    var matches4 = document.querySelectorAll(pattern4);\n    if (compareResults(matches4, elements)) {\n      current = type;\n    }\n  }\n\n  // efficiency: combinations of classname (partial permutations)\n  if (/^\\.\\S*[^\\s\\\\]\\.\\S+/.test(current)) {\n    var names = current.trim().replace(/(^|[^\\\\])\\./g, '$1#.') // escape actual dots\n    .split('#.') // split only on actual dots\n    .slice(1).map(function (name) {\n      return '.' + name;\n    }).sort(function (curr, next) {\n      return curr.length - next.length;\n    });\n    while (names.length) {\n      var partial = current.replace(names.shift(), '').trim();\n      var pattern5 = ('' + prePart + partial + postPart).trim();\n      if (!pattern5.length || pattern5.charAt(0) === '>' || pattern5.charAt(pattern5.length - 1) === '>') {\n        break;\n      }\n      var matches5 = document.querySelectorAll(pattern5);\n      if (compareResults(matches5, elements)) {\n        current = partial;\n      }\n    }\n\n    // robustness: degrade complex classname (heuristic)\n    names = current && current.match(/\\./g);\n    if (names && names.length > 2) {\n      var _references = document.querySelectorAll('' + prePart + current);\n\n      var _loop3 = function _loop3() {\n        var reference = _references[i2];\n        if (elements.some(function (element) {\n          return reference.contains(element);\n        })) {\n          // TODO:\n          // - check using attributes + regard excludes\n          var description = reference.tagName.toLowerCase();\n          pattern6 = '' + prePart + description + postPart;\n          matches6 = document.querySelectorAll(pattern6);\n\n          if (compareResults(matches6, elements)) {\n            current = description;\n          }\n          return 'break';\n        }\n      };\n\n      for (var i2 = 0, l2 = _references.length; i2 < l2; i2++) {\n        var pattern6;\n        var matches6;\n\n        var _ret3 = _loop3();\n\n        if (_ret3 === 'break') break;\n      }\n    }\n  }\n\n  return current;\n}\n\n/**\n * Evaluate matches with expected elements\n *\n * @param  {Array.<HTMLElement>} matches  - [description]\n * @param  {Array.<HTMLElement>} elements - [description]\n * @return {Boolean}                      - [description]\n */\nfunction compareResults(matches, elements) {\n  var length = matches.length;\n\n  return length === elements.length && elements.every(function (element) {\n    for (var i = 0; i < length; i++) {\n      if (matches[i] === element) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\nmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = adapt;\n/**\n * # Adapt\n *\n * Check and extend the environment for universal usage.\n */\n\n/**\n * Modify the context based on the environment\n *\n * @param  {HTMLELement} element - [description]\n * @param  {Object}      options - [description]\n * @return {boolean}             - [description]\n */\nfunction adapt(element, options) {\n  // detect environment setup\n  if (true) {\n    return false;\n  } else {\n    global.document = options.context || function () {\n      var root = element;\n      while (root.parent) {\n        root = root.parent;\n      }\n      return root;\n    }();\n  }\n\n  // https://github.com/fb55/domhandler/blob/master/index.js#L75\n  var ElementPrototype = Object.getPrototypeOf(true);\n\n  // alternative descriptor to access elements with filtering invalid elements (e.g. textnodes)\n  if (!Object.getOwnPropertyDescriptor(ElementPrototype, 'childTags')) {\n    Object.defineProperty(ElementPrototype, 'childTags', {\n      enumerable: true,\n      get: function get() {\n        return this.children.filter(function (node) {\n          // https://github.com/fb55/domelementtype/blob/master/index.js#L12\n          return node.type === 'tag' || node.type === 'script' || node.type === 'style';\n        });\n      }\n    });\n  }\n\n  if (!Object.getOwnPropertyDescriptor(ElementPrototype, 'attributes')) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes\n    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap\n    Object.defineProperty(ElementPrototype, 'attributes', {\n      enumerable: true,\n      get: function get() {\n        var attribs = this.attribs;\n\n        var attributesNames = Object.keys(attribs);\n        var NamedNodeMap = attributesNames.reduce(function (attributes, attributeName, index) {\n          attributes[index] = {\n            name: attributeName,\n            value: attribs[attributeName]\n          };\n          return attributes;\n        }, {});\n        Object.defineProperty(NamedNodeMap, 'length', {\n          enumerable: false,\n          configurable: false,\n          value: attributesNames.length\n        });\n        return NamedNodeMap;\n      }\n    });\n  }\n\n  if (!ElementPrototype.getAttribute) {\n    // https://docs.webplatform.org/wiki/dom/Element/getAttribute\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n    ElementPrototype.getAttribute = function (name) {\n      return this.attribs[name] || null;\n    };\n  }\n\n  if (!ElementPrototype.getElementsByTagName) {\n    // https://docs.webplatform.org/wiki/dom/Document/getElementsByTagName\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n    ElementPrototype.getElementsByTagName = function (tagName) {\n      var HTMLCollection = [];\n      traverseDescendants(this.childTags, function (descendant) {\n        if (descendant.name === tagName || tagName === '*') {\n          HTMLCollection.push(descendant);\n        }\n      });\n      return HTMLCollection;\n    };\n  }\n\n  if (!ElementPrototype.getElementsByClassName) {\n    // https://docs.webplatform.org/wiki/dom/Document/getElementsByClassName\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n    ElementPrototype.getElementsByClassName = function (className) {\n      var names = className.trim().replace(/\\s+/g, ' ').split(' ');\n      var HTMLCollection = [];\n      traverseDescendants([this], function (descendant) {\n        var descendantClassName = descendant.attribs.class;\n        if (descendantClassName && names.every(function (name) {\n          return descendantClassName.indexOf(name) > -1;\n        })) {\n          HTMLCollection.push(descendant);\n        }\n      });\n      return HTMLCollection;\n    };\n  }\n\n  if (!ElementPrototype.querySelectorAll) {\n    // https://docs.webplatform.org/wiki/css/selectors_api/querySelectorAll\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    ElementPrototype.querySelectorAll = function (selectors) {\n      var _this = this;\n\n      selectors = selectors.replace(/(>)(\\S)/g, '$1 $2').trim(); // add space for '>' selector\n\n      // using right to left execution => https://github.com/fb55/css-select#how-does-it-work\n      var instructions = getInstructions(selectors);\n      var discover = instructions.shift();\n\n      var total = instructions.length;\n      return discover(this).filter(function (node) {\n        var step = 0;\n        while (step < total) {\n          node = instructions[step](node, _this);\n          if (!node) {\n            // hierarchy doesn't match\n            return false;\n          }\n          step += 1;\n        }\n        return true;\n      });\n    };\n  }\n\n  if (!ElementPrototype.contains) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n    ElementPrototype.contains = function (element) {\n      var inclusive = false;\n      traverseDescendants([this], function (descendant, done) {\n        if (descendant === element) {\n          inclusive = true;\n          done();\n        }\n      });\n      return inclusive;\n    };\n  }\n\n  return true;\n}\n\n/**\n * Retrieve transformation steps\n *\n * @param  {Array.<string>}   selectors - [description]\n * @return {Array.<Function>}           - [description]\n */\nfunction getInstructions(selectors) {\n  return selectors.split(' ').reverse().map(function (selector, step) {\n    var discover = step === 0;\n\n    var _selector$split = selector.split(':'),\n        _selector$split2 = _slicedToArray(_selector$split, 2),\n        type = _selector$split2[0],\n        pseudo = _selector$split2[1];\n\n    var validate = null;\n    var instruction = null;\n\n    switch (true) {\n\n      // child: '>'\n      case />/.test(type):\n        instruction = function checkParent(node) {\n          return function (validate) {\n            return validate(node.parent) && node.parent;\n          };\n        };\n        break;\n\n      // class: '.'\n      case /^\\./.test(type):\n        {\n          var names = type.substr(1).split('.');\n          validate = function validate(node) {\n            var nodeClassName = node.attribs.class;\n            return nodeClassName && names.every(function (name) {\n              return nodeClassName.indexOf(name) > -1;\n            });\n          };\n          instruction = function checkClass(node, root) {\n            if (discover) {\n              return node.getElementsByClassName(names.join(' '));\n            }\n            return typeof node === 'function' ? node(validate) : getAncestor(node, root, validate);\n          };\n          break;\n        }\n\n      // attribute: '[key=\"value\"]'\n      case /^\\[/.test(type):\n        {\n          var _type$replace$split = type.replace(/\\[|\\]|\"/g, '').split('='),\n              _type$replace$split2 = _slicedToArray(_type$replace$split, 2),\n              attributeKey = _type$replace$split2[0],\n              attributeValue = _type$replace$split2[1];\n\n          validate = function validate(node) {\n            var hasAttribute = Object.keys(node.attribs).indexOf(attributeKey) > -1;\n            if (hasAttribute) {\n              // regard optional attributeValue\n              if (!attributeValue || node.attribs[attributeKey] === attributeValue) {\n                return true;\n              }\n            }\n            return false;\n          };\n          instruction = function checkAttribute(node, root) {\n            if (discover) {\n              var NodeList = [];\n              traverseDescendants([node], function (descendant) {\n                if (validate(descendant)) {\n                  NodeList.push(descendant);\n                }\n              });\n              return NodeList;\n            }\n            return typeof node === 'function' ? node(validate) : getAncestor(node, root, validate);\n          };\n          break;\n        }\n\n      // id: '#'\n      case /^#/.test(type):\n        {\n          var id = type.substr(1);\n          validate = function validate(node) {\n            return node.attribs.id === id;\n          };\n          instruction = function checkId(node, root) {\n            if (discover) {\n              var NodeList = [];\n              traverseDescendants([node], function (descendant, done) {\n                if (validate(descendant)) {\n                  NodeList.push(descendant);\n                  done();\n                }\n              });\n              return NodeList;\n            }\n            return typeof node === 'function' ? node(validate) : getAncestor(node, root, validate);\n          };\n          break;\n        }\n\n      // universal: '*'\n      case /\\*/.test(type):\n        {\n          validate = function validate() {\n            return true;\n          };\n          instruction = function checkUniversal(node, root) {\n            if (discover) {\n              var NodeList = [];\n              traverseDescendants([node], function (descendant) {\n                return NodeList.push(descendant);\n              });\n              return NodeList;\n            }\n            return typeof node === 'function' ? node(validate) : getAncestor(node, root, validate);\n          };\n          break;\n        }\n\n      // tag: '...'\n      default:\n        validate = function validate(node) {\n          return node.name === type;\n        };\n        instruction = function checkTag(node, root) {\n          if (discover) {\n            var NodeList = [];\n            traverseDescendants([node], function (descendant) {\n              if (validate(descendant)) {\n                NodeList.push(descendant);\n              }\n            });\n            return NodeList;\n          }\n          return typeof node === 'function' ? node(validate) : getAncestor(node, root, validate);\n        };\n    }\n\n    if (!pseudo) {\n      return instruction;\n    }\n\n    var rule = pseudo.match(/-(child|type)\\((\\d+)\\)$/);\n    var kind = rule[1];\n    var index = parseInt(rule[2], 10) - 1;\n\n    var validatePseudo = function validatePseudo(node) {\n      if (node) {\n        var compareSet = node.parent.childTags;\n        if (kind === 'type') {\n          compareSet = compareSet.filter(validate);\n        }\n        var nodeIndex = compareSet.findIndex(function (child) {\n          return child === node;\n        });\n        if (nodeIndex === index) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    return function enhanceInstruction(node) {\n      var match = instruction(node);\n      if (discover) {\n        return match.reduce(function (NodeList, matchedNode) {\n          if (validatePseudo(matchedNode)) {\n            NodeList.push(matchedNode);\n          }\n          return NodeList;\n        }, []);\n      }\n      return validatePseudo(match) && match;\n    };\n  });\n}\n\n/**\n * Walking recursive to invoke callbacks\n *\n * @param {Array.<HTMLElement>} nodes   - [description]\n * @param {Function}            handler - [description]\n */\nfunction traverseDescendants(nodes, handler) {\n  nodes.forEach(function (node) {\n    var progress = true;\n    handler(node, function () {\n      return progress = false;\n    });\n    if (node.childTags && progress) {\n      traverseDescendants(node.childTags, handler);\n    }\n  });\n}\n\n/**\n * Bubble up from bottom to top\n *\n * @param  {HTMLELement} node     - [description]\n * @param  {HTMLELement} root     - [description]\n * @param  {Function}    validate - [description]\n * @return {HTMLELement}          - [description]\n */\nfunction getAncestor(node, root, validate) {\n  while (node.parent) {\n    node = node.parent;\n    if (validate(node)) {\n      return node;\n    }\n    if (node === root) {\n      break;\n    }\n  }\n  return null;\n}\nmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                               * # Select\n                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                               * Construct a unique CSS query selector to access the selected DOM element(s).\n                                                                                                                                                                                                                                                                               * For longevity it applies different matching and optimization strategies.\n                                                                                                                                                                                                                                                                               */\n\n\nexports.getSingleSelector = getSingleSelector;\nexports.getMultiSelector = getMultiSelector;\nexports.default = getQuerySelector;\n\nvar _css2xpath = __webpack_require__(5);\n\nvar _css2xpath2 = _interopRequireDefault(_css2xpath);\n\nvar _adapt = __webpack_require__(3);\n\nvar _adapt2 = _interopRequireDefault(_adapt);\n\nvar _match = __webpack_require__(6);\n\nvar _match2 = _interopRequireDefault(_match);\n\nvar _optimize = __webpack_require__(2);\n\nvar _optimize2 = _interopRequireDefault(_optimize);\n\nvar _utilities = __webpack_require__(0);\n\nvar _common = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Get a selector for the provided element\n *\n * @param  {HTMLElement} element - [description]\n * @param  {Object}      options - [description]\n * @return {string}              - [description]\n */\nfunction getSingleSelector(element) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n  if (element.nodeType === 3) {\n    element = element.parentNode;\n  }\n\n  if (element.nodeType !== 1) {\n    throw new Error('Invalid input - only HTMLElements or representations of them are supported! (not \"' + (typeof element === 'undefined' ? 'undefined' : _typeof(element)) + '\")');\n  }\n\n  var globalModified = (0, _adapt2.default)(element, options);\n\n  var selector = (0, _match2.default)(element, options);\n  var optimized = (0, _optimize2.default)(selector, element, options);\n\n  // debug\n  // console.log(`\n  //   selector:  ${selector}\n  //   optimized: ${optimized}\n  // `)\n\n  if (globalModified) {\n    delete true;\n  }\n\n  return optimized;\n}\n\n/**\n * Get a selector to match multiple descendants from an ancestor\n *\n * @param  {Array.<HTMLElement>|NodeList} elements - [description]\n * @param  {Object}                       options  - [description]\n * @return {string}                                - [description]\n */\nfunction getMultiSelector(elements) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n  if (!Array.isArray(elements)) {\n    elements = (0, _utilities.convertNodeList)(elements);\n  }\n\n  if (elements.some(function (element) {\n    return element.nodeType !== 1;\n  })) {\n    throw new Error('Invalid input - only an Array of HTMLElements or representations of them is supported!');\n  }\n\n  var globalModified = (0, _adapt2.default)(elements[0], options);\n\n  var ancestor = (0, _common.getCommonAncestor)(elements, options);\n  var ancestorSelector = getSingleSelector(ancestor, options);\n\n  // TODO: consider usage of multiple selectors + parent-child relation + check for part redundancy\n  var commonSelectors = getCommonSelectors(elements);\n  var descendantSelector = commonSelectors[0];\n\n  var selector = (0, _optimize2.default)(ancestorSelector + ' ' + descendantSelector, elements, options);\n  var selectorMatches = (0, _utilities.convertNodeList)(document.querySelectorAll(selector));\n\n  if (!elements.every(function (element) {\n    return selectorMatches.some(function (entry) {\n      return entry === element;\n    });\n  })) {\n    // TODO: cluster matches to split into similar groups for sub selections\n    return console.warn('\\n      The selected elements can\\'t be efficiently mapped.\\n      Its probably best to use multiple single selectors instead!\\n    ', elements);\n  }\n\n  if (globalModified) {\n    delete true;\n  }\n\n  return selector;\n}\n\n/**\n * Get selectors to describe a set of elements\n *\n * @param  {Array.<HTMLElements>} elements - [description]\n * @return {string}                        - [description]\n */\nfunction getCommonSelectors(elements) {\n  var _getCommonProperties = (0, _common.getCommonProperties)(elements),\n      classes = _getCommonProperties.classes,\n      attributes = _getCommonProperties.attributes,\n      tag = _getCommonProperties.tag;\n\n  var selectorPath = [];\n\n  if (tag) {\n    selectorPath.push(tag);\n  }\n\n  if (classes) {\n    var classSelector = classes.map(function (name) {\n      return '.' + name;\n    }).join('');\n    selectorPath.push(classSelector);\n  }\n\n  if (attributes) {\n    var attributeSelector = Object.keys(attributes).reduce(function (parts, name) {\n      parts.push('[' + name + '=\"' + attributes[name] + '\"]');\n      return parts;\n    }, []).join('');\n    selectorPath.push(attributeSelector);\n  }\n\n  if (selectorPath.length) {\n    // TODO: check for parent-child relation\n  }\n\n  return [selectorPath.join('')];\n}\n\n/**\n * Choose action depending on the input (multiple/single)\n *\n * NOTE: extended detection is used for special cases like the <select> element with <options>\n *\n * @param  {HTMLElement|NodeList|Array.<HTMLElement>} input   - [description]\n * @param  {Object}                                   options - [description]\n * @return {string}                                           - [description]\n */\nfunction getQuerySelector(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (input.length && !input.name) {\n    return getMultiSelector(input, options);\n  }\n  var result = getSingleSelector(input, options);\n\n  if (!options || !options.format) {\n    return result;\n  }\n\n  return (0, _css2xpath2.default)(result);\n}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n(function () {\n  var xpath_to_lower = function xpath_to_lower(s) {\n    return 'translate(' + (s || 'normalize-space()') + ', \\'ABCDEFGHJIKLMNOPQRSTUVWXYZ\\'' + ', \\'abcdefghjiklmnopqrstuvwxyz\\')';\n  },\n      xpath_ends_with = function xpath_ends_with(s1, s2) {\n    return 'substring(' + s1 + ',' + 'string-length(' + s1 + ')-string-length(' + s2 + ')+1)=' + s2;\n  },\n      xpath_url = function xpath_url(s) {\n    return 'substring-before(concat(substring-after(' + (s || xpath_url_attrs) + ',\"://\"),\"?\"),\"?\")';\n  },\n      xpath_url_path = function xpath_url_path(s) {\n    return 'substring-after(' + (s || xpath_url_attrs) + ',\"/\")';\n  },\n      xpath_url_domain = function xpath_url_domain(s) {\n    return 'substring-before(concat(substring-after(' + (s || xpath_url_attrs) + ',\"://\"),\"/\"),\"/\")';\n  },\n      xpath_url_attrs = '@href|@src',\n      xpath_lower_case = xpath_to_lower(),\n      xpath_ns_uri = 'ancestor-or-self::*[last()]/@url',\n      xpath_ns_path = xpath_url_path(xpath_url(xpath_ns_uri)),\n      xpath_has_protocal = '(starts-with(' + xpath_url_attrs + ',\"http://\") or starts-with(' + xpath_url_attrs + ',\"https://\"))',\n      xpath_is_internal = 'starts-with(' + xpath_url() + ',' + xpath_url_domain(xpath_ns_uri) + ') or ' + xpath_ends_with(xpath_url_domain(), xpath_url_domain(xpath_ns_uri)),\n      xpath_is_local = '(' + xpath_has_protocal + ' and starts-with(' + xpath_url() + ',' + xpath_url(xpath_ns_uri) + '))',\n      xpath_is_path = 'starts-with(' + xpath_url_attrs + ',\"/\")',\n      xpath_is_local_path = 'starts-with(' + xpath_url_path() + ',' + xpath_ns_path + ')',\n      xpath_normalize_space = 'normalize-space()',\n      xpath_internal = '[not(' + xpath_has_protocal + ') or ' + xpath_is_internal + ']',\n      xpath_external = '[' + xpath_has_protocal + ' and not(' + xpath_is_internal + ')]',\n      escape_literal = String.fromCharCode(30),\n      escape_parens = String.fromCharCode(31),\n      regex_string_literal = /(\"[^\"\\x1E]*\"|'[^'\\x1E]*'|=\\s*[^\\s\\]\\'\\\"]+)/g,\n      regex_escaped_literal = /['\"]?(\\x1E+)['\"]?/g,\n      regex_css_wrap_pseudo = /(\\x1F\\)|[^\\)])\\:(first|limit|last|gt|lt|eq|nth)([^\\-]|$)/,\n      regex_specal_chars = /[\\x1C-\\x1F]+/g,\n      regex_first_axis = /^([\\s\\(\\x1F]*)(\\.?[^\\.\\/\\(]{1,2}[a-z]*:*)/,\n      regex_filter_prefix = /(^|\\/|\\:)\\[/g,\n      regex_attr_prefix = /([^\\(\\[\\/\\|\\s\\x1F])\\@/g,\n      regex_nth_equation = /^([-0-9]*)n.*?([0-9]*)$/,\n      css_combinators_regex = /\\s*(!?[+>~,^ ])\\s*(\\.?\\/+|[a-z\\-]+::)?([a-z\\-]+\\()?((and\\s*|or\\s*|mod\\s*)?[^+>~,\\s'\"\\]\\|\\^\\$\\!\\<\\=\\x1C-\\x1F]+)?/g,\n      css_combinators_callback = function css_combinators_callback(match, operator, axis, func, literal, exclude, offset, orig) {\n    var prefix = ''; // If we can, we'll prefix a '.'\n\n    // XPath operators can look like node-name selectors\n    // Detect false positive for \" and\", \" or\", \" mod\"\n    if (operator === ' ' && exclude !== undefined) {\n      return match;\n    }\n\n    if (axis === undefined) {\n      // Only allow node-selecting XPath functions\n      // Detect false positive for \" + count(...)\", \" count(...)\", \" > position()\", etc.\n      if (func !== undefined && func !== 'node(' && func !== 'text(' && func !== 'comment(') {\n        return;\n      } else if (literal === undefined) {\n        literal = func;\n      } // Handle case \" + text()\", \" > comment()\", etc. where \"func\" is our \"literal\"\n\n      // XPath math operators match some CSS combinators\n      // Detect false positive for \" + 1\", \" > 1\", etc.\n      if (isNumeric(literal)) {\n        return match;\n      }\n\n      var prevChar = orig.charAt(offset - 1);\n\n      if (prevChar.length === 0 || prevChar === '(' || prevChar === '|' || prevChar === ':') {\n        prefix = '.';\n      }\n    }\n\n    // Return if we don't have a selector to follow the axis\n    if (literal === undefined) {\n      if (offset + match.length === orig.length) {\n        literal = '*';\n      } else {\n        return match;\n      }\n    }\n\n    switch (operator) {\n      case ' ':\n        return '//' + literal;\n      case '>':\n        return '/' + literal;\n      case '+':\n        return prefix + '/following-sibling::*[1]/self::' + literal;\n      case '~':\n        return prefix + '/following-sibling::' + literal;\n      case ',':\n        if (axis === undefined) {}\n        axis = './/';\n        return '|' + axis + literal;\n      case '^':\n        // first child\n        return '/child::*[1]/self::' + literal;\n      case '!^':\n        // last child\n        return '/child::*[last()]/self::' + literal;\n      case '! ':\n        // ancestor-or-self\n        return '/ancestor-or-self::' + literal;\n      case '!>':\n        // direct parent\n        return '/parent::' + literal;\n      case '!+':\n        // adjacent preceding sibling\n        return '/preceding-sibling::*[1]/self::' + literal;\n      case '!~':\n        // preceding sibling\n        return '/preceding-sibling::' + literal;\n      // case '~~'\n      // return '/following-sibling::*/self::|'+selectorStart(orig, offset)+'/preceding-sibling::*/self::'+literal;\n    }\n  },\n      css_attributes_regex = /\\[([^\\@\\|\\*\\=\\^\\~\\$\\!\\(\\/\\s\\x1C-\\x1F]+)\\s*(([\\|\\*\\~\\^\\$\\!]?)=?\\s*(\\x1E+))?\\]/g,\n      css_attributes_callback = function css_attributes_callback(str, attr, comp, op, val, offset, orig) {\n    var axis = '';\n    var prevChar = orig.charAt(offset - 1);\n\n    /*\n    if (prevChar === '/' || // found after an axis shortcut (\"/\", \"//\", etc.)\n        prevChar === ':')   // found after an axis (\"self::\", \"parent::\", etc.)\n        axis = '*';*/\n\n    switch (op) {\n      case '!':\n        return axis + '[not(@' + attr + ') or @' + attr + '!=\"' + val + '\"]';\n      case '$':\n        return axis + '[substring(@' + attr + ',string-length(@' + attr + ')-(string-length(\"' + val + '\")-1))=\"' + val + '\"]';\n      case '^':\n        return axis + '[starts-with(@' + attr + ',\"' + val + '\")]';\n      case '~':\n        return axis + '[contains(concat(\" \",normalize-space(@' + attr + '),\" \"),concat(\" \",\"' + val + '\",\" \"))]';\n      case '*':\n        return axis + '[contains(@' + attr + ',\"' + val + '\")]';\n      case '|':\n        return axis + '[@' + attr + '=\"' + val + '\" or starts-with(@' + attr + ',concat(\"' + val + '\",\"-\"))]';\n      default:\n        if (comp === undefined) {\n          if (attr.charAt(attr.length - 1) === '(' || attr.search(/^[0-9]+$/) !== -1 || attr.indexOf(':') !== -1) {\n            return str;\n          }\n          return axis + '[@' + attr + ']';\n        } else {\n          return axis + '[@' + attr + '=\"' + val + '\"]';\n        }\n    }\n  },\n      css_pseudo_classes_regex = /:([a-z\\-]+)(\\((\\x1F+)(([^\\x1F]+(\\3\\x1F+)?)*)(\\3\\)))?/g,\n      css_pseudo_classes_callback = function css_pseudo_classes_callback(match, name, g1, g2, arg, g3, g4, g5, offset, orig) {\n    if (orig.charAt(offset - 1) === ':' && orig.charAt(offset - 2) !== ':') {\n      // XPath \"axis::node-name\" will match\n      // Detect false positive \":node-name\"\n      return match;\n    }\n\n    if (name === 'odd' || name === 'even') {\n      arg = name;\n      name = 'nth-of-type';\n    }\n\n    switch (name) {// name.toLowerCase()?\n      case 'after':\n        return '[count(' + css2xpath('preceding::' + arg, true) + ') > 0]';\n      case 'after-sibling':\n        return '[count(' + css2xpath('preceding-sibling::' + arg, true) + ') > 0]';\n      case 'before':\n        return '[count(' + css2xpath('following::' + arg, true) + ') > 0]';\n      case 'before-sibling':\n        return '[count(' + css2xpath('following-sibling::' + arg, true) + ') > 0]';\n      case 'checked':\n        return '[@selected or @checked]';\n      case 'contains':\n        return '[contains(' + xpath_normalize_space + ',' + arg + ')]';\n      case 'icontains':\n        return '[contains(' + xpath_lower_case + ',' + xpath_to_lower(arg) + ')]';\n      case 'empty':\n        return '[not(*) and not(normalize-space())]';\n      case 'enabled':\n      case 'disabled':\n        return '[@' + name + ']';\n      case 'first-child':\n        return '[not(preceding-sibling::*)]';\n      case 'first':\n      case 'limit':\n      case 'first-of-type':\n        if (arg !== undefined) {\n          return '[position()<=' + arg + ']';\n        }\n        return '[1]';\n      case 'gt':\n        // Position starts at 0 for consistency with Sizzle selectors\n        return '[position()>' + (parseInt(arg, 10) + 1) + ']';\n      case 'lt':\n        // Position starts at 0 for consistency with Sizzle selectors\n        return '[position()<' + (parseInt(arg, 10) + 1) + ']';\n      case 'last-child':\n        return '[not(following-sibling::*)]';\n      case 'only-child':\n        return '[not(preceding-sibling::*) and not(following-sibling::*)]';\n      case 'only-of-type':\n        return '[not(preceding-sibling::*[name()=name(self::node())]) and not(following-sibling::*[name()=name(self::node())])]';\n      case 'nth-child':\n        if (isNumeric(arg)) {\n          return '[(count(preceding-sibling::*)+1) = ' + arg + ']';\n        }\n        switch (arg) {\n          case 'even':\n            return '[(count(preceding-sibling::*)+1) mod 2=0]';\n          case 'odd':\n            return '[(count(preceding-sibling::*)+1) mod 2=1]';\n          default:\n            var a = (arg || '0').replace(regex_nth_equation, '$1+$2').split('+');\n\n            a[0] = a[0] || '1';\n            a[1] = a[1] || '0';\n            return '[(count(preceding-sibling::*)+1)>=' + a[1] + ' and ((count(preceding-sibling::*)+1)-' + a[1] + ') mod ' + a[0] + '=0]';\n        }\n      case 'nth-of-type':\n        if (isNumeric(arg)) {\n          return '[' + arg + ']';\n        }\n        switch (arg) {\n          case 'odd':\n            return '[position() mod 2=1]';\n          case 'even':\n            return '[position() mod 2=0 and position()>=0]';\n          default:\n            var a = (arg || '0').replace(regex_nth_equation, '$1+$2').split('+');\n\n            a[0] = a[0] || '1';\n            a[1] = a[1] || '0';\n            return '[position()>=' + a[1] + ' and (position()-' + a[1] + ') mod ' + a[0] + '=0]';\n        }\n      case 'eq':\n      case 'nth':\n        // Position starts at 0 for consistency with Sizzle selectors\n        if (isNumeric(arg)) {\n          return '[' + (parseInt(arg, 10) + 1) + ']';\n        }\n\n        return '[1]';\n      case 'text':\n        return '[@type=\"text\"]';\n      case 'istarts-with':\n        return '[starts-with(' + xpath_lower_case + ',' + xpath_to_lower(arg) + ')]';\n      case 'starts-with':\n        return '[starts-with(' + xpath_normalize_space + ',' + arg + ')]';\n      case 'iends-with':\n        return '[' + xpath_ends_with(xpath_lower_case, xpath_to_lower(arg)) + ']';\n      case 'ends-with':\n        return '[' + xpath_ends_with(xpath_normalize_space, arg) + ']';\n      case 'has':\n        var xpath = prependAxis(css2xpath(arg, true), './/');\n\n        return '[count(' + xpath + ') > 0]';\n      case 'has-sibling':\n        var xpath = css2xpath('preceding-sibling::' + arg, true);\n\n        return '[count(' + xpath + ') > 0 or count(following-sibling::' + xpath.substr(19) + ') > 0]';\n      case 'has-parent':\n        return '[count(' + css2xpath('parent::' + arg, true) + ') > 0]';\n      case 'has-ancestor':\n        return '[count(' + css2xpath('ancestor::' + arg, true) + ') > 0]';\n      case 'last':\n      case 'last-of-type':\n        if (arg !== undefined) {\n          return '[position()>last()-' + arg + ']';\n        }\n        return '[last()]';\n      case 'selected':\n        // Sizzle: \"(option) elements that are currently selected\"\n        return '[local-name()=\"option\" and @selected]';\n      case 'skip':\n      case 'skip-first':\n        return '[position()>' + arg + ']';\n      case 'skip-last':\n        if (arg !== undefined) {\n          return '[last()-position()>=' + arg + ']';\n        }\n        return '[position()<last()]';\n      case 'root':\n        return '/ancestor::[last()]';\n      case 'range':\n        var arr = arg.split(',');\n\n        return '[' + arr[0] + '<=position() and position()<=' + arr[1] + ']';\n      case 'input':\n        // Sizzle: \"input, button, select, and textarea are all considered to be input elements.\"\n        return '[local-name()=\"input\" or local-name()=\"button\" or local-name()=\"select\" or local-name()=\"textarea\"]';\n      case 'internal':\n        return xpath_internal;\n      case 'external':\n        return xpath_external;\n      case 'http':\n      case 'https':\n      case 'mailto':\n      case 'javascript':\n        return '[starts-with(@href,concat(\"' + name + '\",\":\"))]';\n      case 'domain':\n        return '[(string-length(' + xpath_url_domain() + ')=0 and contains(' + xpath_url_domain(xpath_ns_uri) + ',' + arg + ')) or contains(' + xpath_url_domain() + ',' + arg + ')]';\n      case 'path':\n        return '[starts-with(' + xpath_url_path() + ',substring-after(\"' + arg + '\",\"/\"))]';\n      case 'not':\n        var xpath = css2xpath(arg, true);\n\n        if (xpath.charAt(0) === '[') {\n          xpath = 'self::node()' + xpath;\n        }\n        return '[not(' + xpath + ')]';\n      case 'target':\n        return '[starts-with(@href, \"#\")]';\n      case 'root':\n        return 'ancestor-or-self::*[last()]';\n      /* case 'active':\n      case 'focus':\n      case 'hover':\n      case 'link':\n      case 'visited':\n          return '';*/\n      case 'lang':\n        return '[@lang=\"' + arg + '\"]';\n      case 'read-only':\n      case 'read-write':\n        return '[@' + name.replace('-', '') + ']';\n      case 'valid':\n      case 'required':\n      case 'in-range':\n      case 'out-of-range':\n        return '[@' + name + ']';\n      default:\n        return match;\n    }\n  },\n      css_ids_classes_regex = /(#|\\.)([^\\#\\@\\.\\/\\(\\[\\)\\]\\|\\:\\s\\+\\>\\<\\'\\\"\\x1D-\\x1F]+)/g,\n      css_ids_classes_callback = function css_ids_classes_callback(str, op, val, offset, orig) {\n    var axis = '';\n    /* var prevChar = orig.charAt(offset-1);\n    if (prevChar.length === 0 ||\n        prevChar === '/' ||\n        prevChar === '(')\n        axis = '*';\n    else if (prevChar === ':')\n        axis = 'node()';*/\n    if (op === '#') {\n      return axis + '[@id=\"' + val + '\"]';\n    }\n    return axis + '[contains(concat(\" \",normalize-space(@class),\" \"),\" ' + val + ' \")]';\n  };\n\n  // Prepend descendant-or-self if no other axis is specified\n  function prependAxis(s, axis) {\n    return s.replace(regex_first_axis, function (match, start, literal) {\n      if (literal.substr(literal.length - 2) === '::') // Already has axis::\n        {\n          return match;\n        }\n\n      if (literal.charAt(0) === '[') {\n        axis += '*';\n      }\n      // else if (axis.charAt(axis.length-1) === ')')\n      //    axis += '/';\n      return start + axis + literal;\n    });\n  }\n\n  // Find the begining of the selector, starting at i and working backwards\n  function selectorStart(s, i) {\n    var depth = 0;\n    var offset = 0;\n\n    while (i--) {\n      switch (s.charAt(i)) {\n        case ' ':\n        case escape_parens:\n          offset++;\n          break;\n        case '[':\n        case '(':\n          depth--;\n\n          if (depth < 0) {\n            return ++i + offset;\n          }\n          break;\n        case ']':\n        case ')':\n          depth++;\n          break;\n        case ',':\n        case '|':\n          if (depth === 0) {\n            return ++i + offset;\n          }\n        default:\n          offset = 0;\n      }\n    }\n\n    return 0;\n  }\n\n  // Check if string is numeric\n  function isNumeric(s) {\n    var num = parseInt(s, 10);\n\n    return !isNaN(num) && '' + num === s;\n  }\n\n  // Append escape \"char\" to \"open\" or \"close\"\n  function escapeChar(s, open, close, char) {\n    var depth = 0;\n\n    return s.replace(new RegExp('[\\\\' + open + '\\\\' + close + ']', 'g'), function (a) {\n      if (a === open) {\n        depth++;\n      }\n\n      if (a === open) {\n        return a + repeat(char, depth);\n      } else {\n        return repeat(char, depth--) + a;\n      }\n    });\n  }\n\n  function repeat(str, num) {\n    num = Number(num);\n    var result = '';\n\n    while (true) {\n      if (num & 1) {\n        result += str;\n      }\n      num >>>= 1;\n\n      if (num <= 0) {\n        break;\n      }\n      str += str;\n    }\n\n    return result;\n  }\n\n  function convertEscaping(value) {\n    return value && value.replace(/\\\\([`\\\\/:\\?&!#$%^()[\\]{|}*+;,.<=>@~])/g, '$1').replace(/\\\\(['\"])/g, '$1$1').replace(/\\\\A /g, '\\n');\n  }\n\n  function css2xpath(s, nested) {\n    // s = s.trim();\n\n    if (nested === true) {\n      // Replace :pseudo-classes\n      s = s.replace(css_pseudo_classes_regex, css_pseudo_classes_callback);\n\n      // Replace #ids and .classes\n      s = s.replace(css_ids_classes_regex, css_ids_classes_callback);\n\n      return s;\n    }\n\n    // Tag open and close parenthesis pairs (for RegExp searches)\n    s = escapeChar(s, '(', ')', escape_parens);\n\n    // Remove and save any string literals\n    var literals = [];\n\n    s = s.replace(regex_string_literal, function (s, a) {\n      if (a.charAt(0) === '=') {\n        a = a.substr(1).trim();\n\n        if (isNumeric(a)) {\n          return s;\n        }\n      } else {\n        a = a.substr(1, a.length - 2);\n      }\n\n      return repeat(escape_literal, literals.push(convertEscaping(a)));\n    });\n\n    // Replace CSS combinators (\" \", \"+\", \">\", \"~\", \",\") and reverse combinators (\"!\", \"!+\", \"!>\", \"!~\")\n    s = s.replace(css_combinators_regex, css_combinators_callback);\n\n    // Replace CSS attribute filters\n    s = s.replace(css_attributes_regex, css_attributes_callback);\n\n    // Wrap certain :pseudo-classes in parens (to collect node-sets)\n    while (true) {\n      var index = s.search(regex_css_wrap_pseudo);\n\n      if (index === -1) {\n        break;\n      }\n      index = s.indexOf(':', index);\n      var start = selectorStart(s, index);\n\n      s = s.substr(0, start) + '(' + s.substring(start, index) + ')' + s.substr(index);\n    }\n\n    // Replace :pseudo-classes\n    s = s.replace(css_pseudo_classes_regex, css_pseudo_classes_callback);\n\n    // Replace #ids and .classes\n    s = s.replace(css_ids_classes_regex, css_ids_classes_callback);\n\n    // Restore the saved string literals\n    s = s.replace(regex_escaped_literal, function (s, a) {\n      var str = literals[a.length - 1];\n\n      return '\"' + str + '\"';\n    });\n\n    // Remove any special characters\n    s = s.replace(regex_specal_chars, '');\n\n    // add * to stand-alone filters\n    s = s.replace(regex_filter_prefix, '$1*[');\n\n    // add \"/\" between @attribute selectors\n    s = s.replace(regex_attr_prefix, '$1/@');\n\n    /*\n    Combine multiple filters?\n     s = escapeChar(s, '[', ']', filter_char);\n    s = s.replace(/(\\x1D+)\\]\\[\\1(.+?[^\\x1D])\\1\\]/g, ' and ($2)$1]')\n    */\n\n    s = prependAxis(s, './/'); // prepend \".//\" axis to begining of CSS selector\n    return s;\n  }\n\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = css2xpath;\n  } else {\n    window.css2xpath = css2xpath;\n  }\n})();\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = match;\n\nvar _utilities = __webpack_require__(0);\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**\n                                                                                                                                                                                                     * # Match\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     * Retrieve selector for a node.\n                                                                                                                                                                                                     */\n\nvar defaultIgnore = {\n  attribute: function attribute(attributeName) {\n    return ['style', 'data-reactid', 'data-react-checksum'].indexOf(attributeName) > -1;\n  }\n};\n\n/**\n * Get the path of the element\n *\n * @param  {HTMLElement} node    - [description]\n * @param  {Object}      options - [description]\n * @return {string}              - [description]\n */\nfunction match(node, options) {\n  var _options$root = options.root,\n      root = _options$root === undefined ? document : _options$root,\n      _options$skip = options.skip,\n      skip = _options$skip === undefined ? null : _options$skip,\n      _options$priority = options.priority,\n      priority = _options$priority === undefined ? ['id', 'class', 'href', 'src'] : _options$priority,\n      _options$ignore = options.ignore,\n      ignore = _options$ignore === undefined ? {} : _options$ignore;\n\n\n  var path = [];\n  var element = node;\n  var length = path.length;\n\n  var skipCompare = skip && (Array.isArray(skip) ? skip : [skip]).map(function (entry) {\n    if (typeof entry !== 'function') {\n      return function (element) {\n        return element === entry;\n      };\n    }\n    return entry;\n  });\n\n  var skipChecks = function skipChecks(element) {\n    return skip && skipCompare.some(function (compare) {\n      return compare(element);\n    });\n  };\n\n  Object.keys(ignore).forEach(function (type) {\n    var predicate = ignore[type];\n    if (typeof predicate === 'function') return;\n    if (typeof predicate === 'number') {\n      predicate = predicate.toString();\n    }\n    if (typeof predicate === 'string') {\n      predicate = new RegExp((0, _utilities.escapeValue)(predicate).replace(/\\\\/g, '\\\\\\\\'));\n    }\n    if (typeof predicate === 'boolean') {\n      predicate = predicate ? /(?:)/ : /.^/;\n    }\n    // check class-/attributename for regex\n    ignore[type] = function (name, value) {\n      return predicate.test(value);\n    };\n  });\n\n  while (element !== root && element.nodeType !== 11) {\n    if (skipChecks(element) !== true) {\n      // ~ global\n      if (checkAttributes(priority, element, ignore, path, root)) break;\n      if (checkTag(element, ignore, path, root)) break;\n\n      // ~ local\n      checkAttributes(priority, element, ignore, path);\n      if (path.length === length) {\n        checkTag(element, ignore, path);\n      }\n\n      // define only one part each iteration\n      if (path.length === length) {\n        checkChilds(priority, element, ignore, path);\n      }\n    }\n\n    element = element.parentNode;\n    length = path.length;\n  }\n\n  if (element === root) {\n    var pattern = findPattern(priority, element, ignore);\n    path.unshift(pattern);\n  }\n\n  return path.join(' ');\n}\n\n/**\n * Extend path with attribute identifier\n *\n * @param  {Array.<string>} priority - [description]\n * @param  {HTMLElement}    element  - [description]\n * @param  {Object}         ignore   - [description]\n * @param  {Array.<string>} path     - [description]\n * @param  {HTMLElement}    parent   - [description]\n * @return {boolean}                 - [description]\n */\nfunction checkAttributes(priority, element, ignore, path) {\n  var parent = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : element.parentNode;\n\n  var pattern = findAttributesPattern(priority, element, ignore, parent);\n  if (pattern) {\n    var matches = parent.querySelectorAll(pattern);\n    if (matches.length === 1) {\n      path.unshift(pattern);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Get class selector\n *\n * @param  {Array.<string>} classes - [description]\n * @param  {HTMLElement}    parent  - [description]\n * @return {string?}                 - [description]\n */\nfunction getClassSelector() {\n  var classes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var parent = arguments[1];\n\n  var result = [[]];\n\n  classes.forEach(function (c) {\n    result.forEach(function (r) {\n      result.push(r.concat('.' + c));\n    });\n  });\n\n  result.shift();\n\n  result = result.sort(function (a, b) {\n    return a.length - b.length;\n  });\n\n  for (var i = 0; i < result.length; i++) {\n    var r = result[i].join('');\n    var matches = parent.querySelectorAll(r);\n    if (matches.length === 1) {\n      return r;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Lookup attribute identifier\n *\n * @param  {Array.<string>} priority - [description]\n * @param  {HTMLElement}    element  - [description]\n * @param  {Object}         ignore   - [description]\n * @return {string?}                 - [description]\n */\nfunction findAttributesPattern(priority, element, ignore) {\n  var parent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : element.parentNode;\n\n  var attributes = element.attributes;\n  var attributeNames = Object.keys(attributes).map(function (val) {\n    return attributes[val].name;\n  }).filter(function (a) {\n    return priority.indexOf(a) < 0;\n  });\n\n  var sortedKeys = [].concat(_toConsumableArray(priority), _toConsumableArray(attributeNames));\n\n  var tagName = element.tagName.toLowerCase();\n\n  for (var i = 0, l = sortedKeys.length; i < l; i++) {\n    var key = sortedKeys[i];\n    var attribute = attributes[key];\n    var attributeName = (0, _utilities.escapeValue)(attribute && attribute.name);\n    var attributeValue = (0, _utilities.escapeValue)(attribute && attribute.value);\n    var useNamedIgnore = attributeName !== 'class';\n\n    var currentIgnore = useNamedIgnore && ignore[attributeName] || ignore.attribute;\n    var currentDefaultIgnore = useNamedIgnore && defaultIgnore[attributeName] || defaultIgnore.attribute;\n    if (checkIgnore(currentIgnore, attributeName, attributeValue, currentDefaultIgnore)) {\n      continue;\n    }\n\n    var pattern = '[' + attributeName + '=\"' + attributeValue + '\"]';\n    if (!attributeValue.trim()) {\n      return null;\n    }\n\n    if (attributeName === 'id') {\n      pattern = '#' + attributeValue;\n    }\n\n    if (attributeName === 'class') {\n      var _ret = function () {\n        var classNames = attributeValue.trim().split(/\\s+/g);\n        var classIgnore = ignore.class || defaultIgnore.class;\n        if (classIgnore) {\n          classNames = classNames.filter(function (className) {\n            return !classIgnore(className);\n          });\n        }\n        if (classNames.length === 0) {\n          return 'continue';\n        }\n        pattern = getClassSelector(classNames, parent);\n\n        if (!pattern) {\n          return 'continue';\n        }\n      }();\n\n      if (_ret === 'continue') continue;\n    }\n\n    return tagName + pattern;\n  }\n  return null;\n}\n\n/**\n * Extend path with tag identifier\n *\n * @param  {HTMLElement}    element - [description]\n * @param  {Object}         ignore  - [description]\n * @param  {Array.<string>} path    - [description]\n * @param  {HTMLElement}    parent  - [description]\n * @return {boolean}                - [description]\n */\nfunction checkTag(element, ignore, path) {\n  var parent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : element.parentNode;\n\n  var pattern = findTagPattern(element, ignore);\n  if (pattern) {\n    var matches = [];\n    matches = parent.querySelectorAll(pattern);\n    if (matches.length === 1) {\n      path.unshift(pattern);\n      if (pattern === 'iframe') {\n        return false;\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Lookup tag identifier\n *\n * @param  {HTMLElement} element - [description]\n * @param  {Object}      ignore  - [description]\n * @return {boolean}             - [description]\n */\nfunction findTagPattern(element, ignore) {\n  var tagName = element.tagName.toLowerCase();\n  if (checkIgnore(ignore.tag, null, tagName)) {\n    return null;\n  }\n  return tagName;\n}\n\n/**\n * Extend path with specific child identifier\n *\n * NOTE: 'childTags' is a custom property to use as a view filter for tags using 'adapter.js'\n *\n * @param  {Array.<string>} priority - [description]\n * @param  {HTMLElement}    element  - [description]\n * @param  {Object}         ignore   - [description]\n * @param  {Array.<string>} path     - [description]\n * @return {boolean}                 - [description]\n */\nfunction checkChilds(priority, element, ignore, path) {\n  var parent = element.parentNode;\n  var children = parent.childTags || parent.children;\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    if (child === element) {\n      var childPattern = findPattern(priority, child, ignore);\n      if (!childPattern) {\n        return console.warn('\\n          Element couldn\\'t be matched through strict ignore pattern!\\n        ', child, ignore, childPattern);\n      }\n      var pattern = '> ' + childPattern + ':nth-child(' + (i + 1) + ')';\n      path.unshift(pattern);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Lookup identifier\n *\n * @param  {Array.<string>} priority - [description]\n * @param  {HTMLElement}    element  - [description]\n * @param  {Object}         ignore   - [description]\n * @return {string}                  - [description]\n */\nfunction findPattern(priority, element, ignore) {\n  var pattern = findAttributesPattern(priority, element, ignore);\n  if (!pattern) {\n    pattern = findTagPattern(element, ignore);\n  }\n  return pattern;\n}\n\n/**\n * Validate with custom and default functions\n *\n * @param  {Function} predicate        - [description]\n * @param  {string?}  name             - [description]\n * @param  {string}   value            - [description]\n * @param  {Function} defaultPredicate - [description]\n * @return {boolean}                   - [description]\n */\nfunction checkIgnore(predicate, name, value, defaultPredicate) {\n  if (!value) {\n    return true;\n  }\n  var check = predicate || defaultPredicate;\n  if (!check) {\n    return false;\n  }\n  return check(name, value, defaultPredicate);\n}\nmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.common = exports.optimize = exports.getMultiSelector = exports.getSingleSelector = exports.select = undefined;\n\nvar _select = __webpack_require__(4);\n\nObject.defineProperty(exports, 'select', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_select).default;\n  }\n});\nObject.defineProperty(exports, 'getSingleSelector', {\n  enumerable: true,\n  get: function get() {\n    return _select.getSingleSelector;\n  }\n});\nObject.defineProperty(exports, 'getMultiSelector', {\n  enumerable: true,\n  get: function get() {\n    return _select.getMultiSelector;\n  }\n});\n\nvar _optimize = __webpack_require__(2);\n\nObject.defineProperty(exports, 'optimize', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_optimize).default;\n  }\n});\nObject.keys(_select).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _select[key];\n    }\n  });\n});\n\nvar _common2 = __webpack_require__(1);\n\nvar _common = _interopRequireWildcard(_common2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.common = _common;\n\n/***/ }\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// optimal-select.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 746ec233adcb240f1f96","/**\n * # Utilities\n *\n * Convenience helpers.\n */\n\n/**\n * Create an array with the DOM nodes of the list\n *\n * @param  {NodeList}             nodes - [description]\n * @return {Array.<HTMLElement>}        - [description]\n */\nexport function convertNodeList (nodes) {\n  const { length } = nodes\n  const arr = new Array(length)\n  for (var i = 0; i < length; i++) {\n    arr[i] = nodes[i]\n  }\n  return arr\n}\n\n/**\n * Escape special characters and line breaks as a simplified version of 'CSS.escape()'\n *\n * Description of valid characters: https://mathiasbynens.be/notes/css-escapes\n *\n * @param  {String?} value - [description]\n * @return {String}        - [description]\n */\nexport function escapeValue (value) {\n  return value && value.replace(/['\"`\\\\/:?&!#$%^()[\\]{|}*+;,.<=>@~]/g, '\\\\$&')\n    .replace(/\\n/g, '\\u00a0')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities.js","/**\n * # Common\n *\n * Process collections for similarities.\n */\n\n/**\n * Find the last common ancestor of elements\n *\n * @param  {Array.<HTMLElements>} elements - [description]\n * @return {HTMLElement}                   - [description]\n */\nexport function getCommonAncestor (elements, options = {}) {\n\n  const {\n    root = document\n  } = options\n\n  const ancestors = []\n\n  elements.forEach((element, index) => {\n    const parents = []\n    while (element !== root) {\n      element = element.parentNode\n      parents.unshift(element)\n    }\n    ancestors[index] = parents\n  })\n\n  ancestors.sort((curr, next) => curr.length - next.length)\n\n  const shallowAncestor = ancestors.shift()\n\n  var ancestor = null\n\n  for (var i = 0, l = shallowAncestor.length; i < l; i++) {\n    const parent = shallowAncestor[i]\n    const missing = ancestors.some((otherParents) => {\n      return !otherParents.some((otherParent) => otherParent === parent)\n    })\n\n    if (missing) {\n      // TODO: find similar sub-parents, not the top root, e.g. sharing a class selector\n      break\n    }\n\n    ancestor = parent\n  }\n\n  return ancestor\n}\n\n/**\n * Get a set of common properties of elements\n *\n * @param  {Array.<HTMLElement>} elements - [description]\n * @return {Object}                       - [description]\n */\nexport function getCommonProperties (elements) {\n\n  const commonProperties = {\n    classes: [],\n    attributes: {},\n    tag: null\n  }\n\n  elements.forEach((element) => {\n\n    var {\n      classes: commonClasses,\n      attributes: commonAttributes,\n      tag: commonTag\n    } = commonProperties\n\n    // ~ classes\n    if (commonClasses !== undefined) {\n      var classes = element.getAttribute('class')\n      if (classes) {\n        classes = classes.trim().split(' ')\n        if (!commonClasses.length) {\n          commonProperties.classes = classes\n        } else {\n          commonClasses = commonClasses.filter((entry) => classes.some((name) => name === entry))\n          if (commonClasses.length) {\n            commonProperties.classes = commonClasses\n          } else {\n            delete commonProperties.classes\n          }\n        }\n      } else {\n        // TODO: restructure removal as 2x set / 2x delete, instead of modify always replacing with new collection\n        delete commonProperties.classes\n      }\n    }\n\n    // ~ attributes\n    if (commonAttributes !== undefined) {\n      const elementAttributes = element.attributes\n      const attributes = Object.keys(elementAttributes).reduce((attributes, key) => {\n        const attribute = elementAttributes[key]\n        const attributeName = attribute.name\n        // NOTE: workaround detection for non-standard phantomjs NamedNodeMap behaviour\n        // (issue: https://github.com/ariya/phantomjs/issues/14634)\n        if (attribute && attributeName !== 'class') {\n          attributes[attributeName] = attribute.value\n        }\n        return attributes\n      }, {})\n\n      const attributesNames = Object.keys(attributes)\n      const commonAttributesNames = Object.keys(commonAttributes)\n\n      if (attributesNames.length) {\n        if (!commonAttributesNames.length) {\n          commonProperties.attributes = attributes\n        } else {\n          commonAttributes = commonAttributesNames.reduce((nextCommonAttributes, name) => {\n            const value = commonAttributes[name]\n            if (value === attributes[name]) {\n              nextCommonAttributes[name] = value\n            }\n            return nextCommonAttributes\n          }, {})\n          if (Object.keys(commonAttributes).length) {\n            commonProperties.attributes = commonAttributes\n          } else {\n            delete commonProperties.attributes\n          }\n        }\n      } else {\n        delete commonProperties.attributes\n      }\n    }\n\n    // ~ tag\n    if (commonTag !== undefined) {\n      const tag = element.tagName.toLowerCase()\n      if (!commonTag) {\n        commonProperties.tag = tag\n      } else if (tag !== commonTag) {\n        delete commonProperties.tag\n      }\n    }\n  })\n\n  return commonProperties\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common.js","/**\n * # Optimize\n *\n * 1.) Improve efficiency through shorter selectors by removing redundancy\n * 2.) Improve robustness through selector transformation\n */\n\nimport adapt from './adapt'\nimport { convertNodeList } from './utilities'\n\n/**\n * Apply different optimization techniques\n *\n * @param  {string}                          selector - [description]\n * @param  {HTMLElement|Array.<HTMLElement>} element  - [description]\n * @param  {Object}                          options  - [description]\n * @return {string}                                   - [description]\n */\nexport default function optimize (selector, elements, options = {}) {\n\n  if (selector.startsWith('> ')) {\n    selector = selector.replace('> ', '')\n  }\n\n  // convert single entry and NodeList\n  if (!Array.isArray(elements)) {\n    elements = !elements.length ? [elements] : convertNodeList(elements)\n  }\n\n  if (!elements.length || elements.some((element) => element.nodeType !== 1)) {\n    throw new Error('Invalid input - to compare HTMLElements its necessary to provide a reference of the selected node(s)! (missing \"elements\")')\n  }\n\n  const globalModified = adapt(elements[0], options)\n\n  // chunk parts outside of quotes (http://stackoverflow.com/a/25663729)\n  var path = selector.replace(/> /g, '>').split(/\\s+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/)\n\n  if (path.length < 2) {\n    return optimizePart('', selector, '', elements)\n  }\n\n  const shortened = [path.pop()]\n  while (path.length > 1)  {\n    const current = path.pop()\n    const prePart = path.join(' ')\n    const postPart = shortened.join(' ')\n\n    const pattern = `${prePart} ${postPart}`\n    const matches = document.querySelectorAll(pattern)\n    const hasSameResult = matches.length === elements.length && elements.every((element, i) => element === matches[i])\n    if (!hasSameResult) {\n      shortened.unshift(optimizePart(prePart, current, postPart, elements))\n    }\n  }\n  shortened.unshift(path[0])\n  path = shortened\n\n  // optimize start + end\n  path[0] = optimizePart('', path[0], path.slice(1).join(' '), elements)\n  path[path.length-1] = optimizePart(path.slice(0, -1).join(' '), path[path.length-1], '', elements)\n\n  if (globalModified) {\n    delete global.document\n  }\n\n  return path.join(' ').replace(/>/g, '> ').trim()\n}\n\n/**\n * Improve a chunk of the selector\n *\n * @param  {string}              prePart  - [description]\n * @param  {string}              current  - [description]\n * @param  {string}              postPart - [description]\n * @param  {Array.<HTMLElement>} elements - [description]\n * @return {string}                       - [description]\n */\nfunction optimizePart (prePart, current, postPart, elements) {\n  if (prePart.length) prePart = `${prePart} `\n  if (postPart.length) postPart = ` ${postPart}`\n\n  // robustness: attribute without value (generalization)\n  if (/\\[*\\]/.test(current)) {\n    const key = current.replace(/=.*$/, ']')\n    var pattern = `${prePart}${key}${postPart}`\n    var matches = document.querySelectorAll(pattern)\n    if (compareResults(matches, elements)) {\n      current = key\n    } else {\n      // robustness: replace specific key-value with base tag (heuristic)\n      const references = document.querySelectorAll(`${prePart}${key}`)\n      for (var i = 0, l = references.length; i < l; i++) {\n        const reference = references[i]\n        if (elements.some((element) => reference.contains(element))) {\n          const description = reference.tagName.toLowerCase()\n          var pattern2 = `${prePart}${description}${postPart}`\n          var matches2 = document.querySelectorAll(pattern2)\n          if (compareResults(matches2, elements)) {\n            current = description\n          }\n          break\n        }\n      }\n    }\n  }\n\n  // robustness: descendant instead child (heuristic)\n  if (/>/.test(current)) {\n    const descendant = current.replace(/>/, '')\n    var pattern3 = `${prePart}${descendant}${postPart}`\n    var matches3 = document.querySelectorAll(pattern3)\n    if (compareResults(matches3, elements)) {\n      current = descendant\n    }\n  }\n\n  // robustness: 'nth-of-type' instead 'nth-child' (heuristic)\n  if (/:nth-child/.test(current)) {\n    // TODO: consider complete coverage of 'nth-of-type' replacement\n    const type = current.replace(/nth-child/g, 'nth-of-type')\n    var pattern4 = `${prePart}${type}${postPart}`\n    var matches4 = document.querySelectorAll(pattern4)\n    if (compareResults(matches4, elements)) {\n      current = type\n    }\n  }\n\n  // efficiency: combinations of classname (partial permutations)\n  if (/^\\.\\S*[^\\s\\\\]\\.\\S+/.test(current)) {\n    var names = current.trim()\n      .replace(/(^|[^\\\\])\\./g, '$1#.') // escape actual dots\n      .split('#.') // split only on actual dots\n      .slice(1)\n      .map((name) => `.${name}`)\n      .sort((curr, next) => curr.length - next.length)\n    while (names.length) {\n      const partial = current.replace(names.shift(), '').trim()\n      var pattern5 = `${prePart}${partial}${postPart}`.trim()\n      if (!pattern5.length || pattern5.charAt(0) === '>' || pattern5.charAt(pattern5.length-1) === '>') {\n        break\n      }\n      var matches5 = document.querySelectorAll(pattern5)\n      if (compareResults(matches5, elements)) {\n        current = partial\n      }\n    }\n\n    // robustness: degrade complex classname (heuristic)\n    names = current && current.match(/\\./g)\n    if (names && names.length > 2) {\n      const references = document.querySelectorAll(`${prePart}${current}`)\n      for (var i2 = 0, l2 = references.length; i2 < l2; i2++) {\n        const reference = references[i2]\n        if (elements.some((element) => reference.contains(element) )) {\n          // TODO:\n          // - check using attributes + regard excludes\n          const description = reference.tagName.toLowerCase()\n          var pattern6 = `${prePart}${description}${postPart}`\n          var matches6 = document.querySelectorAll(pattern6)\n          if (compareResults(matches6, elements)) {\n            current = description\n          }\n          break\n        }\n      }\n    }\n  }\n\n  return current\n}\n\n/**\n * Evaluate matches with expected elements\n *\n * @param  {Array.<HTMLElement>} matches  - [description]\n * @param  {Array.<HTMLElement>} elements - [description]\n * @return {Boolean}                      - [description]\n */\nfunction compareResults (matches, elements) {\n  const { length } = matches\n  return length === elements.length && elements.every((element) => {\n    for (var i = 0; i < length; i++) {\n      if (matches[i] === element) {\n        return true\n      }\n    }\n    return false\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/optimize.js","/**\n * # Adapt\n *\n * Check and extend the environment for universal usage.\n */\n\n/**\n * Modify the context based on the environment\n *\n * @param  {HTMLELement} element - [description]\n * @param  {Object}      options - [description]\n * @return {boolean}             - [description]\n */\nexport default function adapt (element, options) {\n  // detect environment setup\n  if (global.document) {\n    return false\n  } else {\n    global.document = options.context || (() => {\n      var root = element\n      while (root.parent) {\n        root = root.parent\n      }\n      return root\n    })()\n  }\n\n  // https://github.com/fb55/domhandler/blob/master/index.js#L75\n  const ElementPrototype = Object.getPrototypeOf(global.document)\n\n  // alternative descriptor to access elements with filtering invalid elements (e.g. textnodes)\n  if (!Object.getOwnPropertyDescriptor(ElementPrototype, 'childTags')) {\n    Object.defineProperty(ElementPrototype, 'childTags', {\n      enumerable: true,\n      get () {\n        return this.children.filter((node) => {\n          // https://github.com/fb55/domelementtype/blob/master/index.js#L12\n          return node.type === 'tag' || node.type === 'script' || node.type === 'style'\n        })\n      }\n    })\n  }\n\n  if (!Object.getOwnPropertyDescriptor(ElementPrototype, 'attributes')) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes\n    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap\n    Object.defineProperty(ElementPrototype, 'attributes', {\n      enumerable: true,\n      get () {\n        const { attribs } = this\n        const attributesNames = Object.keys(attribs)\n        const NamedNodeMap = attributesNames.reduce((attributes, attributeName, index) => {\n          attributes[index] = {\n            name: attributeName,\n            value: attribs[attributeName]\n          }\n          return attributes\n        }, { })\n        Object.defineProperty(NamedNodeMap, 'length', {\n          enumerable: false,\n          configurable: false,\n          value: attributesNames.length\n        })\n        return NamedNodeMap\n      }\n    })\n  }\n\n  if (!ElementPrototype.getAttribute) {\n    // https://docs.webplatform.org/wiki/dom/Element/getAttribute\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n    ElementPrototype.getAttribute = function (name) {\n      return this.attribs[name] || null\n    }\n  }\n\n  if (!ElementPrototype.getElementsByTagName) {\n    // https://docs.webplatform.org/wiki/dom/Document/getElementsByTagName\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n    ElementPrototype.getElementsByTagName = function (tagName) {\n      const HTMLCollection = []\n      traverseDescendants(this.childTags, (descendant) => {\n        if (descendant.name === tagName || tagName === '*') {\n          HTMLCollection.push(descendant)\n        }\n      })\n      return HTMLCollection\n    }\n  }\n\n  if (!ElementPrototype.getElementsByClassName) {\n    // https://docs.webplatform.org/wiki/dom/Document/getElementsByClassName\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n    ElementPrototype.getElementsByClassName = function (className) {\n      const names = className.trim().replace(/\\s+/g, ' ').split(' ')\n      const HTMLCollection = []\n      traverseDescendants([this], (descendant) => {\n        const descendantClassName = descendant.attribs.class\n        if (descendantClassName && names.every((name) => descendantClassName.indexOf(name) > -1)) {\n          HTMLCollection.push(descendant)\n        }\n      })\n      return HTMLCollection\n    }\n  }\n\n  if (!ElementPrototype.querySelectorAll) {\n    // https://docs.webplatform.org/wiki/css/selectors_api/querySelectorAll\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    ElementPrototype.querySelectorAll = function (selectors) {\n      selectors = selectors.replace(/(>)(\\S)/g, '$1 $2').trim() // add space for '>' selector\n\n      // using right to left execution => https://github.com/fb55/css-select#how-does-it-work\n      const instructions = getInstructions(selectors)\n      const discover = instructions.shift()\n\n      const total = instructions.length\n      return discover(this).filter((node) => {\n        var step = 0\n        while (step < total) {\n          node = instructions[step](node, this)\n          if (!node) { // hierarchy doesn't match\n            return false\n          }\n          step += 1\n        }\n        return true\n      })\n    }\n  }\n\n  if (!ElementPrototype.contains) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n    ElementPrototype.contains = function (element) {\n      var inclusive = false\n      traverseDescendants([this], (descendant, done) => {\n        if (descendant === element) {\n          inclusive = true\n          done()\n        }\n      })\n      return inclusive\n    }\n  }\n\n  return true\n}\n\n/**\n * Retrieve transformation steps\n *\n * @param  {Array.<string>}   selectors - [description]\n * @return {Array.<Function>}           - [description]\n */\nfunction getInstructions (selectors) {\n  return selectors.split(' ').reverse().map((selector, step) => {\n    const discover = step === 0\n    const [type, pseudo] = selector.split(':')\n\n    var validate = null\n    var instruction = null\n\n    switch (true) {\n\n    // child: '>'\n    case />/.test(type):\n      instruction = function checkParent (node) {\n        return (validate) => validate(node.parent) && node.parent\n      }\n      break\n\n      // class: '.'\n    case /^\\./.test(type): {\n      const names = type.substr(1).split('.')\n      validate = (node) => {\n        const nodeClassName = node.attribs.class\n        return nodeClassName && names.every((name) => nodeClassName.indexOf(name) > -1)\n      }\n      instruction = function checkClass (node, root) {\n        if (discover) {\n          return node.getElementsByClassName(names.join(' '))\n        }\n        return (typeof node === 'function') ? node(validate) : getAncestor(node, root, validate)\n      }\n      break\n    }\n\n    // attribute: '[key=\"value\"]'\n    case /^\\[/.test(type): {\n      const [attributeKey, attributeValue] = type.replace(/\\[|\\]|\"/g, '').split('=')\n      validate = (node) => {\n        const hasAttribute = Object.keys(node.attribs).indexOf(attributeKey) > -1\n        if (hasAttribute) { // regard optional attributeValue\n          if (!attributeValue || (node.attribs[attributeKey] === attributeValue)) {\n            return true\n          }\n        }\n        return false\n      }\n      instruction = function checkAttribute (node, root) {\n        if (discover) {\n          const NodeList = []\n          traverseDescendants([node], (descendant) => {\n            if (validate(descendant)) {\n              NodeList.push(descendant)\n            }\n          })\n          return NodeList\n        }\n        return (typeof node === 'function') ? node(validate) : getAncestor(node, root, validate)\n      }\n      break\n    }\n\n    // id: '#'\n    case /^#/.test(type): {\n      const id = type.substr(1)\n      validate = (node) => {\n        return node.attribs.id === id\n      }\n      instruction = function checkId (node, root) {\n        if (discover) {\n          const NodeList = []\n          traverseDescendants([node], (descendant, done) => {\n            if (validate(descendant)) {\n              NodeList.push(descendant)\n              done()\n            }\n          })\n          return NodeList\n        }\n        return (typeof node === 'function') ? node(validate) : getAncestor(node, root, validate)\n      }\n      break\n    }\n\n    // universal: '*'\n    case /\\*/.test(type): {\n      validate = () => true\n      instruction = function checkUniversal (node, root) {\n        if (discover) {\n          const NodeList = []\n          traverseDescendants([node], (descendant) => NodeList.push(descendant))\n          return NodeList\n        }\n        return (typeof node === 'function') ? node(validate) : getAncestor(node, root, validate)\n      }\n      break\n    }\n\n    // tag: '...'\n    default:\n      validate = (node) => {\n        return node.name === type\n      }\n      instruction = function checkTag (node, root) {\n        if (discover) {\n          const NodeList = []\n          traverseDescendants([node], (descendant) => {\n            if (validate(descendant)) {\n              NodeList.push(descendant)\n            }\n          })\n          return NodeList\n        }\n        return (typeof node === 'function') ? node(validate) : getAncestor(node, root, validate)\n      }\n    }\n\n    if (!pseudo) {\n      return instruction\n    }\n\n    const rule = pseudo.match(/-(child|type)\\((\\d+)\\)$/)\n    const kind = rule[1]\n    const index = parseInt(rule[2], 10) - 1\n\n    const validatePseudo = (node) => {\n      if (node) {\n        var compareSet = node.parent.childTags\n        if (kind === 'type') {\n          compareSet = compareSet.filter(validate)\n        }\n        const nodeIndex = compareSet.findIndex((child) => child === node)\n        if (nodeIndex === index) {\n          return true\n        }\n      }\n      return false\n    }\n\n    return function enhanceInstruction (node) {\n      const match = instruction(node)\n      if (discover) {\n        return match.reduce((NodeList, matchedNode) => {\n          if (validatePseudo(matchedNode)) {\n            NodeList.push(matchedNode)\n          }\n          return NodeList\n        }, [])\n      }\n      return validatePseudo(match) && match\n    }\n  })\n}\n\n/**\n * Walking recursive to invoke callbacks\n *\n * @param {Array.<HTMLElement>} nodes   - [description]\n * @param {Function}            handler - [description]\n */\nfunction traverseDescendants (nodes, handler) {\n  nodes.forEach((node) => {\n    var progress = true\n    handler(node, () => progress = false)\n    if (node.childTags && progress) {\n      traverseDescendants(node.childTags, handler)\n    }\n  })\n}\n\n/**\n * Bubble up from bottom to top\n *\n * @param  {HTMLELement} node     - [description]\n * @param  {HTMLELement} root     - [description]\n * @param  {Function}    validate - [description]\n * @return {HTMLELement}          - [description]\n */\nfunction getAncestor (node, root, validate) {\n  while (node.parent) {\n    node = node.parent\n    if (validate(node)) {\n      return node\n    }\n    if (node === root) {\n      break\n    }\n  }\n  return null\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/adapt.js","/**\n * # Select\n *\n * Construct a unique CSS query selector to access the selected DOM element(s).\n * For longevity it applies different matching and optimization strategies.\n */\nimport css2xpath from 'css2xpath'\n\nimport adapt from './adapt'\nimport match from './match'\nimport optimize from './optimize'\nimport { convertNodeList } from './utilities'\nimport { getCommonAncestor, getCommonProperties } from './common'\n\n/**\n * Get a selector for the provided element\n *\n * @param  {HTMLElement} element - [description]\n * @param  {Object}      options - [description]\n * @return {string}              - [description]\n */\nexport function getSingleSelector (element, options = {}) {\n\n  if (element.nodeType === 3) {\n    element = element.parentNode\n  }\n\n  if (element.nodeType !== 1) {\n    throw new Error(`Invalid input - only HTMLElements or representations of them are supported! (not \"${typeof element}\")`)\n  }\n\n  const globalModified = adapt(element, options)\n\n  const selector = match(element, options)\n  const optimized = optimize(selector, element, options)\n\n  // debug\n  // console.log(`\n  //   selector:  ${selector}\n  //   optimized: ${optimized}\n  // `)\n\n  if (globalModified) {\n    delete global.document\n  }\n\n  return optimized\n}\n\n/**\n * Get a selector to match multiple descendants from an ancestor\n *\n * @param  {Array.<HTMLElement>|NodeList} elements - [description]\n * @param  {Object}                       options  - [description]\n * @return {string}                                - [description]\n */\nexport function getMultiSelector (elements, options = {}) {\n\n  if (!Array.isArray(elements)) {\n    elements = convertNodeList(elements)\n  }\n\n  if (elements.some((element) => element.nodeType !== 1)) {\n    throw new Error('Invalid input - only an Array of HTMLElements or representations of them is supported!')\n  }\n\n  const globalModified = adapt(elements[0], options)\n\n  const ancestor = getCommonAncestor(elements, options)\n  const ancestorSelector = getSingleSelector(ancestor, options)\n\n  // TODO: consider usage of multiple selectors + parent-child relation + check for part redundancy\n  const commonSelectors = getCommonSelectors(elements)\n  const descendantSelector = commonSelectors[0]\n\n  const selector = optimize(`${ancestorSelector} ${descendantSelector}`, elements, options)\n  const selectorMatches = convertNodeList(document.querySelectorAll(selector))\n\n  if (!elements.every((element) => selectorMatches.some((entry) => entry === element) )) {\n    // TODO: cluster matches to split into similar groups for sub selections\n    return console.warn(`\n      The selected elements can't be efficiently mapped.\n      Its probably best to use multiple single selectors instead!\n    `, elements)\n  }\n\n  if (globalModified) {\n    delete global.document\n  }\n\n  return selector\n}\n\n/**\n * Get selectors to describe a set of elements\n *\n * @param  {Array.<HTMLElements>} elements - [description]\n * @return {string}                        - [description]\n */\nfunction getCommonSelectors (elements) {\n\n  const { classes, attributes, tag } = getCommonProperties(elements)\n\n  const selectorPath = []\n\n  if (tag) {\n    selectorPath.push(tag)\n  }\n\n  if (classes) {\n    const classSelector = classes.map((name) => `.${name}`).join('')\n    selectorPath.push(classSelector)\n  }\n\n  if (attributes) {\n    const attributeSelector = Object.keys(attributes).reduce((parts, name) => {\n      parts.push(`[${name}=\"${attributes[name]}\"]`)\n      return parts\n    }, []).join('')\n    selectorPath.push(attributeSelector)\n  }\n\n  if (selectorPath.length) {\n    // TODO: check for parent-child relation\n  }\n\n  return [\n    selectorPath.join('')\n  ]\n}\n\n/**\n * Choose action depending on the input (multiple/single)\n *\n * NOTE: extended detection is used for special cases like the <select> element with <options>\n *\n * @param  {HTMLElement|NodeList|Array.<HTMLElement>} input   - [description]\n * @param  {Object}                                   options - [description]\n * @return {string}                                           - [description]\n */\nexport default function getQuerySelector (input, options = {}) {\n  if (input.length && !input.name) {\n    return getMultiSelector(input, options)\n  }\n  const result = getSingleSelector(input, options)\n\n  if (!options || !options.format) {\n    return result\n  }\n\n  return css2xpath(result)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/select.js","'use strict';\n\n(function () {\n  var xpath_to_lower         = function (s) {\n        return 'translate(' +\n                (s || 'normalize-space()') +\n                ', \\'ABCDEFGHJIKLMNOPQRSTUVWXYZ\\'' +\n                ', \\'abcdefghjiklmnopqrstuvwxyz\\')';\n      },\n      xpath_ends_with        = function (s1, s2) {\n        return 'substring(' + s1 + ',' +\n                'string-length(' + s1 + ')-string-length(' + s2 + ')+1)=' + s2;\n      },\n      xpath_url              = function (s) {\n        return 'substring-before(concat(substring-after(' +\n                (s || xpath_url_attrs) + ',\"://\"),\"?\"),\"?\")';\n      },\n      xpath_url_path         = function (s) {\n        return 'substring-after(' + (s || xpath_url_attrs) + ',\"/\")';\n      },\n      xpath_url_domain       = function (s) {\n        return 'substring-before(concat(substring-after(' +\n               (s || xpath_url_attrs) + ',\"://\"),\"/\"),\"/\")';\n      },\n      xpath_url_attrs        = '@href|@src',\n      xpath_lower_case       = xpath_to_lower(),\n      xpath_ns_uri           = 'ancestor-or-self::*[last()]/@url',\n      xpath_ns_path          = xpath_url_path(xpath_url(xpath_ns_uri)),\n      xpath_has_protocal     = '(starts-with(' + xpath_url_attrs + ',\"http://\") or starts-with(' + xpath_url_attrs + ',\"https://\"))',\n      xpath_is_internal      = 'starts-with(' + xpath_url() + ',' + xpath_url_domain(xpath_ns_uri) + ') or ' + xpath_ends_with(xpath_url_domain(), xpath_url_domain(xpath_ns_uri)),\n      xpath_is_local         = '(' + xpath_has_protocal + ' and starts-with(' + xpath_url() + ',' + xpath_url(xpath_ns_uri) + '))',\n      xpath_is_path          = 'starts-with(' + xpath_url_attrs + ',\"/\")',\n      xpath_is_local_path    = 'starts-with(' + xpath_url_path() + ',' + xpath_ns_path + ')',\n      xpath_normalize_space  = 'normalize-space()',\n      xpath_internal         = '[not(' + xpath_has_protocal + ') or ' + xpath_is_internal + ']',\n      xpath_external         = '[' + xpath_has_protocal + ' and not(' + xpath_is_internal + ')]',\n      escape_literal         = String.fromCharCode(30),\n      escape_parens          = String.fromCharCode(31),\n      regex_string_literal   = /(\"[^\"\\x1E]*\"|'[^'\\x1E]*'|=\\s*[^\\s\\]\\'\\\"]+)/g,\n      regex_escaped_literal  = /['\"]?(\\x1E+)['\"]?/g,\n      regex_css_wrap_pseudo  = /(\\x1F\\)|[^\\)])\\:(first|limit|last|gt|lt|eq|nth)([^\\-]|$)/,\n      regex_specal_chars     = /[\\x1C-\\x1F]+/g,\n      regex_first_axis       = /^([\\s\\(\\x1F]*)(\\.?[^\\.\\/\\(]{1,2}[a-z]*:*)/,\n      regex_filter_prefix    = /(^|\\/|\\:)\\[/g,\n      regex_attr_prefix      = /([^\\(\\[\\/\\|\\s\\x1F])\\@/g,\n      regex_nth_equation     = /^([-0-9]*)n.*?([0-9]*)$/,\n      css_combinators_regex  = /\\s*(!?[+>~,^ ])\\s*(\\.?\\/+|[a-z\\-]+::)?([a-z\\-]+\\()?((and\\s*|or\\s*|mod\\s*)?[^+>~,\\s'\"\\]\\|\\^\\$\\!\\<\\=\\x1C-\\x1F]+)?/g,\n      css_combinators_callback = function (match, operator, axis, func, literal, exclude, offset, orig) {\n        var prefix = ''; // If we can, we'll prefix a '.'\n\n        // XPath operators can look like node-name selectors\n        // Detect false positive for \" and\", \" or\", \" mod\"\n        if (operator === ' ' && exclude !== undefined) {\n          return match;\n        }\n\n        if (axis === undefined) {\n          // Only allow node-selecting XPath functions\n          // Detect false positive for \" + count(...)\", \" count(...)\", \" > position()\", etc.\n          if (func !== undefined && (func !== 'node(' && func !== 'text(' && func !== 'comment('))                {\n            return;\n          } else if (literal === undefined) {\n            literal = func;\n          } // Handle case \" + text()\", \" > comment()\", etc. where \"func\" is our \"literal\"\n\n            // XPath math operators match some CSS combinators\n            // Detect false positive for \" + 1\", \" > 1\", etc.\n          if (isNumeric(literal)) {\n            return match;\n          }\n\n          var prevChar = orig.charAt(offset - 1);\n\n          if (prevChar.length === 0 ||\n                prevChar === '(' ||\n                prevChar === '|' ||\n                prevChar === ':') {\n            prefix = '.';\n          }\n        }\n\n        // Return if we don't have a selector to follow the axis\n        if (literal === undefined) {\n          if (offset + match.length === orig.length) {\n            literal = '*';\n          } else {\n            return match;\n          }\n        }\n\n\n        switch (operator) {\n        case ' ':\n          return '//' + literal;\n        case '>':\n          return '/' + literal;\n        case '+':\n          return prefix + '/following-sibling::*[1]/self::' + literal;\n        case '~':\n          return prefix + '/following-sibling::' + literal;\n        case ',':\n          if (axis === undefined) {\n\n          }\n          axis = './/';\n          return '|' + axis + literal;\n        case '^': // first child\n          return '/child::*[1]/self::' + literal;\n        case '!^': // last child\n          return '/child::*[last()]/self::' + literal;\n        case '! ': // ancestor-or-self\n          return '/ancestor-or-self::' + literal;\n        case '!>': // direct parent\n          return '/parent::' + literal;\n        case '!+': // adjacent preceding sibling\n          return '/preceding-sibling::*[1]/self::' + literal;\n        case '!~': // preceding sibling\n          return '/preceding-sibling::' + literal;\n            // case '~~'\n            // return '/following-sibling::*/self::|'+selectorStart(orig, offset)+'/preceding-sibling::*/self::'+literal;\n        }\n      },\n\n      css_attributes_regex = /\\[([^\\@\\|\\*\\=\\^\\~\\$\\!\\(\\/\\s\\x1C-\\x1F]+)\\s*(([\\|\\*\\~\\^\\$\\!]?)=?\\s*(\\x1E+))?\\]/g,\n      css_attributes_callback = function (str, attr, comp, op, val, offset, orig) {\n        var axis = '';\n        var prevChar = orig.charAt(offset - 1);\n\n        /*\n        if (prevChar === '/' || // found after an axis shortcut (\"/\", \"//\", etc.)\n            prevChar === ':')   // found after an axis (\"self::\", \"parent::\", etc.)\n            axis = '*';*/\n\n        switch (op) {\n        case '!':\n          return axis + '[not(@' + attr + ') or @' + attr + '!=\"' + val + '\"]';\n        case '$':\n          return axis + '[substring(@' + attr + ',string-length(@' + attr + ')-(string-length(\"' + val + '\")-1))=\"' + val + '\"]';\n        case '^':\n          return axis + '[starts-with(@' + attr + ',\"' + val + '\")]';\n        case '~':\n          return axis + '[contains(concat(\" \",normalize-space(@' + attr + '),\" \"),concat(\" \",\"' + val + '\",\" \"))]';\n        case '*':\n          return axis + '[contains(@' + attr + ',\"' + val + '\")]';\n        case '|':\n          return axis + '[@' + attr + '=\"' + val + '\" or starts-with(@' + attr + ',concat(\"' + val + '\",\"-\"))]';\n        default:\n          if (comp === undefined) {\n            if (attr.charAt(attr.length - 1) === '(' || attr.search(/^[0-9]+$/) !== -1 || attr.indexOf(':') !== -1)                        {\n              return str;\n            }\n            return axis + '[@' + attr + ']';\n          } else {\n            return axis + '[@' + attr + '=\"' + val + '\"]';\n          }\n        }\n      },\n\n      css_pseudo_classes_regex = /:([a-z\\-]+)(\\((\\x1F+)(([^\\x1F]+(\\3\\x1F+)?)*)(\\3\\)))?/g,\n      css_pseudo_classes_callback = function (match, name, g1, g2, arg, g3, g4, g5, offset, orig) {\n        if (orig.charAt(offset - 1) === ':' && orig.charAt(offset - 2) !== ':') {\n            // XPath \"axis::node-name\" will match\n            // Detect false positive \":node-name\"\n          return match;\n        }\n\n        if (name === 'odd' || name === 'even') {\n          arg  = name;\n          name = 'nth-of-type';\n        }\n\n        switch (name) { // name.toLowerCase()?\n        case 'after':\n          return '[count(' + css2xpath('preceding::' + arg, true) + ') > 0]';\n        case 'after-sibling':\n          return '[count(' + css2xpath('preceding-sibling::' + arg, true) + ') > 0]';\n        case 'before':\n          return '[count(' + css2xpath('following::' + arg, true) + ') > 0]';\n        case 'before-sibling':\n          return '[count(' + css2xpath('following-sibling::' + arg, true) + ') > 0]';\n        case 'checked':\n          return '[@selected or @checked]';\n        case 'contains':\n          return '[contains(' + xpath_normalize_space + ',' + arg + ')]';\n        case 'icontains':\n          return '[contains(' + xpath_lower_case + ',' + xpath_to_lower(arg) + ')]';\n        case 'empty':\n          return '[not(*) and not(normalize-space())]';\n        case 'enabled':\n        case 'disabled':\n          return '[@' + name + ']';\n        case 'first-child':\n          return '[not(preceding-sibling::*)]';\n        case 'first':\n        case 'limit':\n        case 'first-of-type':\n          if (arg !== undefined)                    {\n            return '[position()<=' + arg + ']';\n          }\n          return '[1]';\n        case 'gt':\n                // Position starts at 0 for consistency with Sizzle selectors\n          return '[position()>' + (parseInt(arg, 10) + 1) + ']';\n        case 'lt':\n                // Position starts at 0 for consistency with Sizzle selectors\n          return '[position()<' + (parseInt(arg, 10) + 1) + ']';\n        case 'last-child':\n          return '[not(following-sibling::*)]';\n        case 'only-child':\n          return '[not(preceding-sibling::*) and not(following-sibling::*)]';\n        case 'only-of-type':\n          return '[not(preceding-sibling::*[name()=name(self::node())]) and not(following-sibling::*[name()=name(self::node())])]';\n        case 'nth-child':\n          if (isNumeric(arg))                    {\n            return '[(count(preceding-sibling::*)+1) = ' + arg + ']';\n          }\n          switch (arg) {\n          case 'even':\n            return '[(count(preceding-sibling::*)+1) mod 2=0]';\n          case 'odd':\n            return '[(count(preceding-sibling::*)+1) mod 2=1]';\n          default:\n            var a = (arg || '0').replace(regex_nth_equation, '$1+$2').split('+');\n\n            a[0] = a[0] || '1';\n            a[1] = a[1] || '0';\n            return '[(count(preceding-sibling::*)+1)>=' + a[1] + ' and ((count(preceding-sibling::*)+1)-' + a[1] + ') mod ' + a[0] + '=0]';\n          }\n        case 'nth-of-type':\n          if (isNumeric(arg))                    {\n            return '[' + arg + ']';\n          }\n          switch (arg) {\n          case 'odd':\n            return '[position() mod 2=1]';\n          case 'even':\n            return '[position() mod 2=0 and position()>=0]';\n          default:\n            var a = (arg || '0').replace(regex_nth_equation, '$1+$2').split('+');\n\n            a[0] = a[0] || '1';\n            a[1] = a[1] || '0';\n            return '[position()>=' + a[1] + ' and (position()-' + a[1] + ') mod ' + a[0] + '=0]';\n          }\n        case 'eq':\n        case 'nth':\n          // Position starts at 0 for consistency with Sizzle selectors\n          if (isNumeric(arg)) {\n            return '[' + (parseInt(arg, 10) + 1) + ']';\n          }\n\n          return '[1]';\n        case 'text':\n          return '[@type=\"text\"]';\n        case 'istarts-with':\n          return '[starts-with(' + xpath_lower_case + ',' + xpath_to_lower(arg) + ')]';\n        case 'starts-with':\n          return '[starts-with(' + xpath_normalize_space + ',' + arg + ')]';\n        case 'iends-with':\n          return '[' + xpath_ends_with(xpath_lower_case, xpath_to_lower(arg)) + ']';\n        case 'ends-with':\n          return '[' + xpath_ends_with(xpath_normalize_space, arg) + ']';\n        case 'has':\n          var xpath = prependAxis(css2xpath(arg, true), './/');\n\n          return '[count(' + xpath + ') > 0]';\n        case 'has-sibling':\n          var xpath = css2xpath('preceding-sibling::' + arg, true);\n\n          return '[count(' + xpath + ') > 0 or count(following-sibling::' + xpath.substr(19) + ') > 0]';\n        case 'has-parent':\n          return '[count(' + css2xpath('parent::' + arg, true) + ') > 0]';\n        case 'has-ancestor':\n          return '[count(' + css2xpath('ancestor::' + arg, true) + ') > 0]';\n        case 'last':\n        case 'last-of-type':\n          if (arg !== undefined)                    {\n            return '[position()>last()-' + arg + ']';\n          }\n          return '[last()]';\n        case 'selected': // Sizzle: \"(option) elements that are currently selected\"\n          return '[local-name()=\"option\" and @selected]';\n        case 'skip':\n        case 'skip-first':\n          return '[position()>' + arg + ']';\n        case 'skip-last':\n          if (arg !== undefined)                    {\n            return '[last()-position()>=' + arg + ']';\n          }\n          return '[position()<last()]';\n        case 'root':\n          return '/ancestor::[last()]';\n        case 'range':\n          var arr = arg.split(',');\n\n          return '[' + arr[0] + '<=position() and position()<=' + arr[1] + ']';\n        case 'input': // Sizzle: \"input, button, select, and textarea are all considered to be input elements.\"\n          return '[local-name()=\"input\" or local-name()=\"button\" or local-name()=\"select\" or local-name()=\"textarea\"]';\n        case 'internal':\n          return xpath_internal;\n        case 'external':\n          return xpath_external;\n        case 'http':\n        case 'https':\n        case 'mailto':\n        case 'javascript':\n          return '[starts-with(@href,concat(\"' + name + '\",\":\"))]';\n        case 'domain':\n          return '[(string-length(' + xpath_url_domain() + ')=0 and contains(' + xpath_url_domain(xpath_ns_uri) + ',' + arg + ')) or contains(' + xpath_url_domain() + ',' + arg + ')]';\n        case 'path':\n          return '[starts-with(' + xpath_url_path() + ',substring-after(\"' + arg + '\",\"/\"))]'\n        case 'not':\n          var xpath = css2xpath(arg, true);\n\n          if (xpath.charAt(0) === '[')                    {\n            xpath = 'self::node()' + xpath;\n          }\n          return '[not(' + xpath + ')]';\n        case 'target':\n          return '[starts-with(@href, \"#\")]';\n        case 'root':\n          return 'ancestor-or-self::*[last()]';\n            /* case 'active':\n            case 'focus':\n            case 'hover':\n            case 'link':\n            case 'visited':\n                return '';*/\n        case 'lang':\n          return '[@lang=\"' + arg + '\"]';\n        case 'read-only':\n        case 'read-write':\n          return '[@' + name.replace('-', '') + ']';\n        case 'valid':\n        case 'required':\n        case 'in-range':\n        case 'out-of-range':\n          return '[@' + name + ']';\n        default:\n          return match;\n        }\n      },\n\n      css_ids_classes_regex = /(#|\\.)([^\\#\\@\\.\\/\\(\\[\\)\\]\\|\\:\\s\\+\\>\\<\\'\\\"\\x1D-\\x1F]+)/g,\n      css_ids_classes_callback = function (str, op, val, offset, orig) {\n        var axis = '';\n        /* var prevChar = orig.charAt(offset-1);\n        if (prevChar.length === 0 ||\n            prevChar === '/' ||\n            prevChar === '(')\n            axis = '*';\n        else if (prevChar === ':')\n            axis = 'node()';*/\n        if (op === '#')            {\n          return axis + '[@id=\"' + val + '\"]';\n        }\n        return axis + '[contains(concat(\" \",normalize-space(@class),\" \"),\" ' + val + ' \")]';\n      };\n\n    // Prepend descendant-or-self if no other axis is specified\n  function prependAxis(s, axis) {\n    return s.replace(regex_first_axis, function (match, start, literal) {\n      if (literal.substr(literal.length - 2) === '::') // Already has axis::\n            {\n        return match;\n      }\n\n      if (literal.charAt(0) === '[')            {\n        axis += '*';\n      }\n        // else if (axis.charAt(axis.length-1) === ')')\n        //    axis += '/';\n      return start + axis + literal;\n    });\n  }\n\n    // Find the begining of the selector, starting at i and working backwards\n  function selectorStart(s, i) {\n    var depth = 0;\n    var offset = 0;\n\n    while (i--) {\n      switch (s.charAt(i)) {\n      case ' ':\n      case escape_parens:\n        offset++;\n        break;\n      case '[':\n      case '(':\n        depth--;\n\n        if (depth < 0)                    {\n          return ++i + offset;\n        }\n        break;\n      case ']':\n      case ')':\n        depth++;\n        break;\n      case ',':\n      case '|':\n        if (depth === 0)                    {\n          return ++i + offset;\n        }\n      default:\n        offset = 0;\n      }\n    }\n\n    return 0;\n  }\n\n    // Check if string is numeric\n  function isNumeric(s) {\n    var num = parseInt(s, 10);\n\n    return (!isNaN(num) && '' + num === s);\n  }\n\n    // Append escape \"char\" to \"open\" or \"close\"\n  function escapeChar(s, open, close, char) {\n    var depth = 0;\n\n    return s.replace(new RegExp('[\\\\' + open + '\\\\' + close + ']', 'g'), function (a) {\n      if (a === open)            {\n        depth++;\n      }\n\n      if (a === open) {\n        return a + repeat(char, depth);\n      } else {\n        return repeat(char, depth--) + a;\n      }\n    })\n  }\n\n  function repeat(str, num) {\n    num = Number(num);\n    var result = '';\n\n    while (true) {\n      if (num & 1)            {\n        result += str;\n      }\n      num >>>= 1;\n\n      if (num <= 0) {\n        break;\n      }\n      str += str;\n    }\n\n    return result;\n  }\n\n  function convertEscaping (value) {\n    return value && value.replace(/\\\\([`\\\\/:\\?&!#$%^()[\\]{|}*+;,.<=>@~])/g, '$1')\n      .replace(/\\\\(['\"])/g, '$1$1')\n      .replace(/\\\\A /g, '\\n')\n  }\n\n  function css2xpath(s, nested) {\n    // s = s.trim();\n\n    if (nested === true) {\n        // Replace :pseudo-classes\n      s = s.replace(css_pseudo_classes_regex, css_pseudo_classes_callback);\n\n        // Replace #ids and .classes\n      s = s.replace(css_ids_classes_regex, css_ids_classes_callback);\n\n      return s;\n    }\n\n    // Tag open and close parenthesis pairs (for RegExp searches)\n    s = escapeChar(s, '(', ')', escape_parens);\n\n    // Remove and save any string literals\n    var literals = [];\n\n    s = s.replace(regex_string_literal, function (s, a) {\n      if (a.charAt(0) === '=') {\n        a = a.substr(1).trim();\n\n        if (isNumeric(a))                {\n          return s;\n        }\n      } else {\n        a = a.substr(1, a.length - 2);\n      }\n\n      return repeat(escape_literal, literals.push(convertEscaping(a)));\n    });\n\n    // Replace CSS combinators (\" \", \"+\", \">\", \"~\", \",\") and reverse combinators (\"!\", \"!+\", \"!>\", \"!~\")\n    s = s.replace(css_combinators_regex, css_combinators_callback);\n\n    // Replace CSS attribute filters\n    s = s.replace(css_attributes_regex, css_attributes_callback);\n\n    // Wrap certain :pseudo-classes in parens (to collect node-sets)\n    while (true) {\n      var index = s.search(regex_css_wrap_pseudo);\n\n      if (index === -1) {\n        break;\n      }\n      index = s.indexOf(':', index);\n      var start = selectorStart(s, index);\n\n      s = s.substr(0, start) +\n            '(' + s.substring(start, index) + ')' +\n            s.substr(index);\n    }\n\n    // Replace :pseudo-classes\n    s = s.replace(css_pseudo_classes_regex, css_pseudo_classes_callback);\n\n    // Replace #ids and .classes\n    s = s.replace(css_ids_classes_regex, css_ids_classes_callback);\n\n    // Restore the saved string literals\n    s = s.replace(regex_escaped_literal, function (s, a) {\n      var str = literals[a.length - 1];\n\n      return '\"' + str + '\"';\n    })\n\n    // Remove any special characters\n    s = s.replace(regex_specal_chars, '');\n\n    // add * to stand-alone filters\n    s = s.replace(regex_filter_prefix, '$1*[');\n\n    // add \"/\" between @attribute selectors\n    s = s.replace(regex_attr_prefix, '$1/@');\n\n    /*\n    Combine multiple filters?\n\n    s = escapeChar(s, '[', ']', filter_char);\n    s = s.replace(/(\\x1D+)\\]\\[\\1(.+?[^\\x1D])\\1\\]/g, ' and ($2)$1]')\n    */\n\n    s = prependAxis(s, './/'); // prepend \".//\" axis to begining of CSS selector\n    return s;\n  }\n\n\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = css2xpath;\n  } else {\n    window.css2xpath = css2xpath;\n  }\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/css2xpath/index.js","/**\n * # Match\n *\n * Retrieve selector for a node.\n */\n\nimport { escapeValue } from './utilities'\n\nconst defaultIgnore = {\n  attribute (attributeName) {\n    return [\n      'style',\n      'data-reactid',\n      'data-react-checksum'\n    ].indexOf(attributeName) > -1\n  }\n}\n\n/**\n * Get the path of the element\n *\n * @param  {HTMLElement} node    - [description]\n * @param  {Object}      options - [description]\n * @return {string}              - [description]\n */\nexport default function match (node, options) {\n\n  const {\n    root = document,\n    skip = null,\n    priority = ['id', 'class', 'href', 'src'],\n    ignore = {}\n  } = options\n\n  const path = []\n  var element = node\n  var length = path.length\n\n  const skipCompare = skip && (Array.isArray(skip) ? skip : [skip]).map((entry) => {\n    if (typeof entry !== 'function') {\n      return (element) => element === entry\n    }\n    return entry\n  })\n\n  const skipChecks = (element) => {\n    return skip && skipCompare.some((compare) => compare(element))\n  }\n\n  Object.keys(ignore).forEach((type) => {\n    var predicate = ignore[type]\n    if (typeof predicate === 'function') return\n    if (typeof predicate === 'number') {\n      predicate = predicate.toString()\n    }\n    if (typeof predicate === 'string') {\n      predicate = new RegExp(escapeValue(predicate).replace(/\\\\/g, '\\\\\\\\'))\n    }\n    if (typeof predicate === 'boolean') {\n      predicate = predicate ? /(?:)/ : /.^/\n    }\n    // check class-/attributename for regex\n    ignore[type] = (name, value) => predicate.test(value)\n  })\n\n  while (element !== root && element.nodeType !== 11) {\n    if (skipChecks(element) !== true) {\n      // ~ global\n      if (checkAttributes(priority, element, ignore, path, root)) break\n      if (checkTag(element, ignore, path, root)) break\n\n      // ~ local\n      checkAttributes(priority, element, ignore, path)\n      if (path.length === length) {\n        checkTag(element, ignore, path)\n      }\n\n      // define only one part each iteration\n      if (path.length === length) {\n        checkChilds(priority, element, ignore, path)\n      }\n    }\n\n    element = element.parentNode\n    length = path.length\n  }\n\n  if (element === root) {\n    const pattern = findPattern(priority, element, ignore)\n    path.unshift(pattern)\n  }\n\n  return path.join(' ')\n}\n\n/**\n * Extend path with attribute identifier\n *\n * @param  {Array.<string>} priority - [description]\n * @param  {HTMLElement}    element  - [description]\n * @param  {Object}         ignore   - [description]\n * @param  {Array.<string>} path     - [description]\n * @param  {HTMLElement}    parent   - [description]\n * @return {boolean}                 - [description]\n */\nfunction checkAttributes (priority, element, ignore, path, parent = element.parentNode) {\n  const pattern = findAttributesPattern(priority, element, ignore, parent)\n  if (pattern) {\n    const matches = parent.querySelectorAll(pattern)\n    if (matches.length === 1) {\n      path.unshift(pattern)\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Get class selector\n *\n * @param  {Array.<string>} classes - [description]\n * @param  {HTMLElement}    parent  - [description]\n * @return {string?}                 - [description]\n */\nfunction getClassSelector(classes = [], parent) {\n  let result = [[]]\n\n  classes.forEach(function(c) {\n    result.forEach(function(r) {\n      result.push(r.concat('.' + c))\n    })\n  })\n\n  result.shift()\n\n  result = result.sort(function(a,b) { return a.length - b.length })\n\n  for(let i = 0; i < result.length; i++) {\n    let r = result[i].join('')\n    const matches = parent.querySelectorAll(r)\n    if (matches.length === 1) {\n      return r\n    }\n  }\n\n  return null\n}\n\n/**\n * Lookup attribute identifier\n *\n * @param  {Array.<string>} priority - [description]\n * @param  {HTMLElement}    element  - [description]\n * @param  {Object}         ignore   - [description]\n * @return {string?}                 - [description]\n */\nfunction findAttributesPattern (priority, element, ignore, parent = element.parentNode) {\n  const attributes = element.attributes\n  var attributeNames = Object.keys(attributes).map((val) => attributes[val].name)\n    .filter((a) => priority.indexOf(a) < 0)\n\n  var sortedKeys = [ ...priority, ...attributeNames ]\n\n  var tagName = element.tagName.toLowerCase()\n\n  for (var i = 0, l = sortedKeys.length; i < l; i++) {\n    const key = sortedKeys[i]\n    const attribute = attributes[key]\n    const attributeName = escapeValue(attribute && attribute.name)\n    const attributeValue = escapeValue(attribute && attribute.value)\n    const useNamedIgnore = attributeName !== 'class'\n\n    const currentIgnore = (useNamedIgnore && ignore[attributeName]) || ignore.attribute\n    const currentDefaultIgnore = (useNamedIgnore && defaultIgnore[attributeName]) || defaultIgnore.attribute\n    if (checkIgnore(currentIgnore, attributeName, attributeValue, currentDefaultIgnore)) {\n      continue\n    }\n\n    var pattern = `[${attributeName}=\"${attributeValue}\"]`\n    if(!attributeValue.trim()) {\n      return null\n    }\n\n    if (attributeName === 'id') {\n      pattern = `#${attributeValue}`\n    }\n\n    if (attributeName === 'class') {\n      let classNames = attributeValue.trim().split(/\\s+/g)\n      const classIgnore = ignore.class || defaultIgnore.class\n      if (classIgnore) {\n        classNames = classNames.filter(className => !classIgnore(className))\n      }\n      if (classNames.length === 0) {\n        continue\n      }\n      pattern = getClassSelector(classNames, parent)\n\n      if (!pattern) {\n        continue\n      }\n    }\n\n    return tagName + pattern\n  }\n  return null\n}\n\n/**\n * Extend path with tag identifier\n *\n * @param  {HTMLElement}    element - [description]\n * @param  {Object}         ignore  - [description]\n * @param  {Array.<string>} path    - [description]\n * @param  {HTMLElement}    parent  - [description]\n * @return {boolean}                - [description]\n */\nfunction checkTag (element, ignore, path, parent = element.parentNode) {\n  const pattern = findTagPattern(element, ignore)\n  if (pattern) {\n    let matches = []\n    matches = parent.querySelectorAll(pattern)\n    if (matches.length === 1) {\n      path.unshift(pattern)\n      if (pattern === 'iframe') {\n        return false\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Lookup tag identifier\n *\n * @param  {HTMLElement} element - [description]\n * @param  {Object}      ignore  - [description]\n * @return {boolean}             - [description]\n */\nfunction findTagPattern (element, ignore) {\n  const tagName = element.tagName.toLowerCase()\n  if (checkIgnore(ignore.tag, null, tagName)) {\n    return null\n  }\n  return tagName\n}\n\n/**\n * Extend path with specific child identifier\n *\n * NOTE: 'childTags' is a custom property to use as a view filter for tags using 'adapter.js'\n *\n * @param  {Array.<string>} priority - [description]\n * @param  {HTMLElement}    element  - [description]\n * @param  {Object}         ignore   - [description]\n * @param  {Array.<string>} path     - [description]\n * @return {boolean}                 - [description]\n */\nfunction checkChilds (priority, element, ignore, path) {\n  const parent = element.parentNode\n  const children = parent.childTags || parent.children\n  for (var i = 0, l = children.length; i < l; i++) {\n    const child = children[i]\n    if (child === element) {\n      const childPattern = findPattern(priority, child, ignore)\n      if (!childPattern) {\n        return console.warn(`\n          Element couldn't be matched through strict ignore pattern!\n        `, child, ignore, childPattern)\n      }\n      const pattern = `> ${childPattern}:nth-child(${i+1})`\n      path.unshift(pattern)\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Lookup identifier\n *\n * @param  {Array.<string>} priority - [description]\n * @param  {HTMLElement}    element  - [description]\n * @param  {Object}         ignore   - [description]\n * @return {string}                  - [description]\n */\nfunction findPattern (priority, element, ignore) {\n  var pattern = findAttributesPattern(priority, element, ignore)\n  if (!pattern) {\n    pattern = findTagPattern(element, ignore)\n  }\n  return pattern\n}\n\n/**\n * Validate with custom and default functions\n *\n * @param  {Function} predicate        - [description]\n * @param  {string?}  name             - [description]\n * @param  {string}   value            - [description]\n * @param  {Function} defaultPredicate - [description]\n * @return {boolean}                   - [description]\n */\nfunction checkIgnore (predicate, name, value, defaultPredicate) {\n  if (!value) {\n    return true\n  }\n  const check = predicate || defaultPredicate\n  if (!check) {\n    return false\n  }\n  return check(name, value, defaultPredicate)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/match.js","export { default as select, getSingleSelector, getMultiSelector } from './select'\nexport { default as optimize } from './optimize'\nexport * as common from './common'\n\nexport * from './select'\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}