diff --git a/node_modules/css2xpath/index.js b/node_modules/css2xpath/index.js
index 8762686..7124e7d 100644
--- a/node_modules/css2xpath/index.js
+++ b/node_modules/css2xpath/index.js
@@ -121,7 +121,7 @@
         }
       },
 
-      css_attributes_regex = /\[([^\@\|\*\=\^\~\$\!\(\/\s\x1C-\x1F]+)\s*(([\|\*\~\^\$\!]?)=?\s*(\x1E+))?\]/g,
+      css_attributes_regex = /\[([^\]\@\|\*\=\^\~\$\!\(\/\s\x1C-\x1F]+)\s*(([\|\*\~\^\$\!]?)=?\s*(\x1E+))?\]/g,
       css_attributes_callback = function (str, attr, comp, op, val, offset, orig) {
         var axis = '';
         var prevChar = orig.charAt(offset - 1);
@@ -453,6 +453,12 @@
     return result;
   }
 
+  function convertEscaping (value) {
+    return value && value.replace(/\\([`\\/:\?&!#$%^()[\]{|}*+;,.<=>@~])/g, '$1')
+      .replace(/\\(['"])/g, '$1$1')
+      .replace(/\\A /g, '\n')
+  }
+
   function css2xpath(s, nested) {
     // s = s.trim();
 
@@ -483,7 +489,7 @@
         a = a.substr(1, a.length - 2);
       }
 
-      return repeat(escape_literal, literals.push(a));
+      return repeat(escape_literal, literals.push(convertEscaping(a)));
     });
 
     // Replace CSS combinators (" ", "+", ">", "~", ",") and reverse combinators ("!", "!+", "!>", "!~")
